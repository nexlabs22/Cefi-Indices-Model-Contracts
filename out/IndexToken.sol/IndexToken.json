{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "feeRatePerDayScaled",
          "type": "uint256"
        }
      ],
      "name": "FeeRateSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "name": "FeeReceiverSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "methodologist",
          "type": "address"
        }
      ],
      "name": "MethodologistSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "methodology",
          "type": "string"
        }
      ],
      "name": "MethodologySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "feeReceiver",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "MintFeeToReceiver",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "MinterSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "supplyCeiling",
          "type": "uint256"
        }
      ],
      "name": "SupplyCeilingSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isRestricted",
          "type": "bool"
        }
      ],
      "name": "ToggledRestricted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeRatePerDayScaled",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeReceiver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTimestamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "tokenName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "tokenSymbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_feeRatePerDayScaled",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_feeReceiver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_supplyCeiling",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRestricted",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "methodologist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "methodology",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintToFeeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proposedOwner",
          "type": "address"
        }
      ],
      "name": "proposeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposedOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_feeRatePerDayScaled",
          "type": "uint256"
        }
      ],
      "name": "setFeeRate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeReceiver",
          "type": "address"
        }
      ],
      "name": "setFeeReceiver",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_methodologist",
          "type": "address"
        }
      ],
      "name": "setMethodologist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_methodology",
          "type": "string"
        }
      ],
      "name": "setMethodology",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "setMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_supplyCeiling",
          "type": "uint256"
        }
      ],
      "name": "setSupplyCeiling",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supplyCeiling",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "toggleRestriction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50611f97806100206000396000f3fe608060405234801561001057600080fd5b50600436106102325760003560e01c80638da5cb5b11610130578063b3f00674116100b8578063efdcd9741161007c578063efdcd974146104a4578063f2fde38b146104b7578063f734e22a146104ca578063fca3b5aa146104d2578063fede0276146104e557600080fd5b8063b3f0067414610434578063b5ed298a14610447578063c01bc9821461045a578063d153b60c1461047e578063dd62ed3e1461049157600080fd5b80639eeb1d50116100ff5780639eeb1d50146103e05780639f8e67bf146103e8578063a457c2d7146103fb578063a9059cbb1461040e578063aaa4a1841461042157600080fd5b80638da5cb5b146103a157806391fe1b92146103b257806395d89b41146103c55780639dc29fac146103cd57600080fd5b806339509351116101be578063660db48411610182578063660db484146103425780636e01a6861461035557806370a0823114610368578063715018a6146103915780638456cb591461039957600080fd5b806339509351146102f45780633f4ba83a1461030757806340c10f191461031157806345596e2e146103245780635c975abb1461033757600080fd5b8063184a732f11610205578063184a732f146102b657806323b872dd146102bf5780632b52684d146102d25780632fecd589146102dc578063313ce567146102e557600080fd5b806306fdde03146102375780630754617214610255578063095ea7b31461028157806318160ddd146102a4575b600080fd5b61023f6104f8565b60405161024c9190611cf5565b60405180910390f35b61010054610269906001600160a01b031681565b6040516001600160a01b03909116815260200161024c565b61029461028f366004611bef565b61058a565b604051901515815260200161024c565b6035545b60405190815260200161024c565b6102a860fd5481565b6102946102cd366004611bb3565b6105a2565b6102a86101025481565b6102a860fc5481565b6040516012815260200161024c565b610294610302366004611bef565b610695565b61030f6106b7565b005b61030f61031f366004611bef565b6106c9565b61030f610332366004611cdc565b6107e3565b60ca5460ff16610294565b61030f610350366004611b5e565b610826565b61030f610363366004611cdc565b61088b565b6102a8610376366004611b5e565b6001600160a01b031660009081526033602052604090205490565b61030f6108d0565b61030f6108e2565b6065546001600160a01b0316610269565b61030f6103c0366004611c19565b6108f2565b61023f6109a4565b61030f6103db366004611bef565b6109b3565b61023f610a88565b60ff54610269906001600160a01b031681565b610294610409366004611bef565b610b17565b61029461041c366004611bef565b610b9d565b61030f61042f366004611b5e565b610c26565b60fe54610269906001600160a01b031681565b61030f610455366004611b5e565b610c9a565b610294610468366004611b5e565b6101036020526000908152604090205460ff1681565b609754610269906001600160a01b031681565b6102a861049f366004611b80565b610cea565b61030f6104b2366004611b5e565b610d15565b61030f6104c5366004611b5e565b610d7a565b61030f610ea2565b61030f6104e0366004611b5e565b610eb2565b61030f6104f3366004611c56565b610f18565b60606036805461050790611efa565b80601f016020809104026020016040519081016040528092919081815260200182805461053390611efa565b80156105805780601f1061055557610100808354040283529160200191610580565b820191906000526020600020905b81548152906001019060200180831161056357829003601f168201915b5050505050905090565b600033610598818585611085565b5060019392505050565b60006105ac6111aa565b336000908152610103602052604090205460ff16156105e65760405162461bcd60e51b81526004016105dd90611d74565b60405180910390fd5b6001600160a01b0383166000908152610103602052604090205460ff16156106205760405162461bcd60e51b81526004016105dd90611d4a565b6001600160a01b0384166000908152610103602052604090205460ff161561067f5760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016105dd565b61068a8433846111f0565b61059884848461126a565b6000336105988185856106a88383610cea565b6106b29190611e8a565b611085565b6106bf611415565b6106c761146f565b565b6106d16111aa565b610100546001600160a01b031633146106fc5760405162461bcd60e51b81526004016105dd90611dab565b610102548161070a60355490565b6107149190611e8a565b11156107625760405162461bcd60e51b815260206004820152601a60248201527f77696c6c2065786365656420737570706c79206365696c696e6700000000000060448201526064016105dd565b6001600160a01b0382166000908152610103602052604090205460ff161561079c5760405162461bcd60e51b81526004016105dd90611d4a565b336000908152610103602052604090205460ff16156107cd5760405162461bcd60e51b81526004016105dd90611d74565b6107d56114c1565b6107df82826115ef565b5050565b6107eb611415565b6107f36114c1565b60fc81905560405181907f45398c451b1a31b88dbaed4e7b89a632f43cc4b50149d437db03a5300afe40d190600090a250565b61082e611415565b6001600160a01b03811661084157600080fd5b60ff80546001600160a01b0319166001600160a01b0383169081179091556040517f164d8ef0d742b45087644f55c61abeb84557df70d06730591e451f0981e278ca90600090a250565b610893611415565b6101028190556040518181527fe35be406f69e9d11d6ac8e5b54bbc8b6c4baf2fa2359f84a56baa5ea5d07dc8f906020015b60405180910390a150565b6108d8611415565b6106c760006116b0565b6108ea611415565b6106c7611702565b60ff546001600160a01b031633146109605760405162461bcd60e51b815260206004820152602b60248201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d6560448201526a1d1a1bd91bdb1bd9da5cdd60aa1b60648201526084016105dd565b805161097490610101906020840190611a1c565b507fe6be68107100e39cb16d675c1086a4d5479fbd01108d721dabbccaa2249b995f816040516108c59190611cf5565b60606037805461050790611efa565b6109bb6111aa565b610100546001600160a01b031633146109e65760405162461bcd60e51b81526004016105dd90611dab565b6001600160a01b0382166000908152610103602052604090205460ff1615610a455760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016105dd565b336000908152610103602052604090205460ff1615610a765760405162461bcd60e51b81526004016105dd90611d74565b610a7e6114c1565b6107df828261173f565b6101018054610a9690611efa565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac290611efa565b8015610b0f5780601f10610ae457610100808354040283529160200191610b0f565b820191906000526020600020905b815481529060010190602001808311610af257829003601f168201915b505050505081565b60003381610b258286610cea565b905083811015610b855760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105dd565b610b928286868403611085565b506001949350505050565b6000610ba76111aa565b336000908152610103602052604090205460ff1615610bd85760405162461bcd60e51b81526004016105dd90611d74565b6001600160a01b0383166000908152610103602052604090205460ff1615610c125760405162461bcd60e51b81526004016105dd90611d4a565b610c1d33848461126a565b50600192915050565b610c2e611415565b6001600160a01b0381166000818152610103602052604090819020805460ff19811660ff9182161590811790925591517f14ddf324cc5d8b14a3c3b12c84b0a7d578d72c8d60655c06d6a457e71431d5ee92610c8f92161515815260200190565b60405180910390a250565b610ca2611415565b6001600160a01b038116610cc85760405162461bcd60e51b81526004016105dd90611def565b609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610d1d611415565b6001600160a01b038116610d3057600080fd5b60fe80546001600160a01b0319166001600160a01b0383169081179091556040517fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d90600090a250565b6001600160a01b038116610da05760405162461bcd60e51b81526004016105dd90611def565b6097546001600160a01b03828116911614610e185760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b60648201526084016105dd565b6001600160a01b0381163314610e965760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e657200000000000060648201526084016105dd565b610e9f816116b0565b50565b610eaa611415565b6106c76114c1565b610eba611415565b6001600160a01b038116610ecd57600080fd5b61010080546001600160a01b0319166001600160a01b0383169081179091556040517f726b590ef91a8c76ad05bbe91a57ef84605276528f49cd47d787f558a4e755b690600090a250565b600054610100900460ff1615808015610f385750600054600160ff909116105b80610f525750303b158015610f52575060005460ff166001145b610fb55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105dd565b6000805460ff191660011790558015610fd8576000805461ff0019166101001790555b6001600160a01b038316610feb57600080fd5b610ff3611870565b610ffb61189f565b61100586866118ce565b61100d6118ff565b60fc84905560fe80546001600160a01b0319166001600160a01b0385161790556101028290554260fd55801561107d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b0383166110e75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105dd565b6001600160a01b0382166111485760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105dd565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60ca5460ff16156106c75760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105dd565b60006111fc8484610cea565b9050600019811461126457818110156112575760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105dd565b6112648484848403611085565b50505050565b6001600160a01b0383166112ce5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105dd565b6001600160a01b0382166113305760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105dd565b6001600160a01b038316600090815260336020526040902054818110156113a85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105dd565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114089086815260200190565b60405180910390a3611264565b6065546001600160a01b031633146106c75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105dd565b611477611926565b60ca805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60006201518060fd54426114d59190611ee3565b6114df9190611ea2565b905060018110610e9f5760006114f460355490565b60fc54909150819060005b848110156115395768056bc75e2d6310000061151b8385611ec4565b6115259190611ea2565b61152f9084611e8a565b92506001016114ff565b5060006115468484611ee3565b90506115558562015180611ec4565b60fd60008282546115669190611e8a565b909155505060fe54611581906001600160a01b0316826115ef565b60fe547f07982395c678b2ffc23fcf59aaec243ca79418c285af0d0e10b4e65bc4189f4c906001600160a01b0316426115b960355490565b604080516001600160a01b0390941684526020840192909252908201526060810183905260800160405180910390a15050505050565b6001600160a01b0382166116455760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105dd565b80603560008282546116579190611e8a565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61170a6111aa565b60ca805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114a43390565b6001600160a01b03821661179f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105dd565b6001600160a01b038216600090815260336020526040902054818110156118135760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105dd565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161119d565b505050565b600054610100900460ff166118975760405162461bcd60e51b81526004016105dd90611e3f565b6106c761196f565b600054610100900460ff166118c65760405162461bcd60e51b81526004016105dd90611e3f565b6106c761199f565b600054610100900460ff166118f55760405162461bcd60e51b81526004016105dd90611e3f565b6107df82826119d2565b600054610100900460ff166106c75760405162461bcd60e51b81526004016105dd90611e3f565b60ca5460ff166106c75760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105dd565b600054610100900460ff166119965760405162461bcd60e51b81526004016105dd90611e3f565b6106c7336116b0565b600054610100900460ff166119c65760405162461bcd60e51b81526004016105dd90611e3f565b60ca805460ff19169055565b600054610100900460ff166119f95760405162461bcd60e51b81526004016105dd90611e3f565b8151611a0c906036906020850190611a1c565b50805161186b9060379060208401905b828054611a2890611efa565b90600052602060002090601f016020900481019282611a4a5760008555611a90565b82601f10611a6357805160ff1916838001178555611a90565b82800160010185558215611a90579182015b82811115611a90578251825591602001919060010190611a75565b50611a9c929150611aa0565b5090565b5b80821115611a9c5760008155600101611aa1565b80356001600160a01b0381168114611acc57600080fd5b919050565b600082601f830112611ae257600080fd5b813567ffffffffffffffff80821115611afd57611afd611f4b565b604051601f8301601f19908116603f01168101908282118183101715611b2557611b25611f4b565b81604052838152866020858801011115611b3e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611b7057600080fd5b611b7982611ab5565b9392505050565b60008060408385031215611b9357600080fd5b611b9c83611ab5565b9150611baa60208401611ab5565b90509250929050565b600080600060608486031215611bc857600080fd5b611bd184611ab5565b9250611bdf60208501611ab5565b9150604084013590509250925092565b60008060408385031215611c0257600080fd5b611c0b83611ab5565b946020939093013593505050565b600060208284031215611c2b57600080fd5b813567ffffffffffffffff811115611c4257600080fd5b611c4e84828501611ad1565b949350505050565b600080600080600060a08688031215611c6e57600080fd5b853567ffffffffffffffff80821115611c8657600080fd5b611c9289838a01611ad1565b96506020880135915080821115611ca857600080fd5b50611cb588828901611ad1565b94505060408601359250611ccb60608701611ab5565b949793965091946080013592915050565b600060208284031215611cee57600080fd5b5035919050565b600060208083528351808285015260005b81811015611d2257858101830151858201604001528201611d06565b81811115611d34576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526010908201526f1d1bc81a5cc81c995cdd1c9a58dd195960821b604082015260600190565b60208082526018908201527f6d73672e73656e64657220697320726573747269637465640000000000000000604082015260600190565b60208082526024908201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d69604082015263373a32b960e11b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115611e9d57611e9d611f35565b500190565b600082611ebf57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611ede57611ede611f35565b500290565b600082821015611ef557611ef5611f35565b500390565b600181811c90821680611f0e57607f821691505b60208210811415611f2f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e62d23476f21f9323c5fc2be7476ca92d38c9f699706119e8572474603242a5364736f6c63430008070033",
    "sourceMap": "491:7462:5:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102325760003560e01c80638da5cb5b11610130578063b3f00674116100b8578063efdcd9741161007c578063efdcd974146104a4578063f2fde38b146104b7578063f734e22a146104ca578063fca3b5aa146104d2578063fede0276146104e557600080fd5b8063b3f0067414610434578063b5ed298a14610447578063c01bc9821461045a578063d153b60c1461047e578063dd62ed3e1461049157600080fd5b80639eeb1d50116100ff5780639eeb1d50146103e05780639f8e67bf146103e8578063a457c2d7146103fb578063a9059cbb1461040e578063aaa4a1841461042157600080fd5b80638da5cb5b146103a157806391fe1b92146103b257806395d89b41146103c55780639dc29fac146103cd57600080fd5b806339509351116101be578063660db48411610182578063660db484146103425780636e01a6861461035557806370a0823114610368578063715018a6146103915780638456cb591461039957600080fd5b806339509351146102f45780633f4ba83a1461030757806340c10f191461031157806345596e2e146103245780635c975abb1461033757600080fd5b8063184a732f11610205578063184a732f146102b657806323b872dd146102bf5780632b52684d146102d25780632fecd589146102dc578063313ce567146102e557600080fd5b806306fdde03146102375780630754617214610255578063095ea7b31461028157806318160ddd146102a4575b600080fd5b61023f6104f8565b60405161024c9190611cf5565b60405180910390f35b61010054610269906001600160a01b031681565b6040516001600160a01b03909116815260200161024c565b61029461028f366004611bef565b61058a565b604051901515815260200161024c565b6035545b60405190815260200161024c565b6102a860fd5481565b6102946102cd366004611bb3565b6105a2565b6102a86101025481565b6102a860fc5481565b6040516012815260200161024c565b610294610302366004611bef565b610695565b61030f6106b7565b005b61030f61031f366004611bef565b6106c9565b61030f610332366004611cdc565b6107e3565b60ca5460ff16610294565b61030f610350366004611b5e565b610826565b61030f610363366004611cdc565b61088b565b6102a8610376366004611b5e565b6001600160a01b031660009081526033602052604090205490565b61030f6108d0565b61030f6108e2565b6065546001600160a01b0316610269565b61030f6103c0366004611c19565b6108f2565b61023f6109a4565b61030f6103db366004611bef565b6109b3565b61023f610a88565b60ff54610269906001600160a01b031681565b610294610409366004611bef565b610b17565b61029461041c366004611bef565b610b9d565b61030f61042f366004611b5e565b610c26565b60fe54610269906001600160a01b031681565b61030f610455366004611b5e565b610c9a565b610294610468366004611b5e565b6101036020526000908152604090205460ff1681565b609754610269906001600160a01b031681565b6102a861049f366004611b80565b610cea565b61030f6104b2366004611b5e565b610d15565b61030f6104c5366004611b5e565b610d7a565b61030f610ea2565b61030f6104e0366004611b5e565b610eb2565b61030f6104f3366004611c56565b610f18565b60606036805461050790611efa565b80601f016020809104026020016040519081016040528092919081815260200182805461053390611efa565b80156105805780601f1061055557610100808354040283529160200191610580565b820191906000526020600020905b81548152906001019060200180831161056357829003601f168201915b5050505050905090565b600033610598818585611085565b5060019392505050565b60006105ac6111aa565b336000908152610103602052604090205460ff16156105e65760405162461bcd60e51b81526004016105dd90611d74565b60405180910390fd5b6001600160a01b0383166000908152610103602052604090205460ff16156106205760405162461bcd60e51b81526004016105dd90611d4a565b6001600160a01b0384166000908152610103602052604090205460ff161561067f5760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016105dd565b61068a8433846111f0565b61059884848461126a565b6000336105988185856106a88383610cea565b6106b29190611e8a565b611085565b6106bf611415565b6106c761146f565b565b6106d16111aa565b610100546001600160a01b031633146106fc5760405162461bcd60e51b81526004016105dd90611dab565b610102548161070a60355490565b6107149190611e8a565b11156107625760405162461bcd60e51b815260206004820152601a60248201527f77696c6c2065786365656420737570706c79206365696c696e6700000000000060448201526064016105dd565b6001600160a01b0382166000908152610103602052604090205460ff161561079c5760405162461bcd60e51b81526004016105dd90611d4a565b336000908152610103602052604090205460ff16156107cd5760405162461bcd60e51b81526004016105dd90611d74565b6107d56114c1565b6107df82826115ef565b5050565b6107eb611415565b6107f36114c1565b60fc81905560405181907f45398c451b1a31b88dbaed4e7b89a632f43cc4b50149d437db03a5300afe40d190600090a250565b61082e611415565b6001600160a01b03811661084157600080fd5b60ff80546001600160a01b0319166001600160a01b0383169081179091556040517f164d8ef0d742b45087644f55c61abeb84557df70d06730591e451f0981e278ca90600090a250565b610893611415565b6101028190556040518181527fe35be406f69e9d11d6ac8e5b54bbc8b6c4baf2fa2359f84a56baa5ea5d07dc8f906020015b60405180910390a150565b6108d8611415565b6106c760006116b0565b6108ea611415565b6106c7611702565b60ff546001600160a01b031633146109605760405162461bcd60e51b815260206004820152602b60248201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d6560448201526a1d1a1bd91bdb1bd9da5cdd60aa1b60648201526084016105dd565b805161097490610101906020840190611a1c565b507fe6be68107100e39cb16d675c1086a4d5479fbd01108d721dabbccaa2249b995f816040516108c59190611cf5565b60606037805461050790611efa565b6109bb6111aa565b610100546001600160a01b031633146109e65760405162461bcd60e51b81526004016105dd90611dab565b6001600160a01b0382166000908152610103602052604090205460ff1615610a455760405162461bcd60e51b8152602060048201526012602482015271199c9bdb481a5cc81c995cdd1c9a58dd195960721b60448201526064016105dd565b336000908152610103602052604090205460ff1615610a765760405162461bcd60e51b81526004016105dd90611d74565b610a7e6114c1565b6107df828261173f565b6101018054610a9690611efa565b80601f0160208091040260200160405190810160405280929190818152602001828054610ac290611efa565b8015610b0f5780601f10610ae457610100808354040283529160200191610b0f565b820191906000526020600020905b815481529060010190602001808311610af257829003601f168201915b505050505081565b60003381610b258286610cea565b905083811015610b855760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016105dd565b610b928286868403611085565b506001949350505050565b6000610ba76111aa565b336000908152610103602052604090205460ff1615610bd85760405162461bcd60e51b81526004016105dd90611d74565b6001600160a01b0383166000908152610103602052604090205460ff1615610c125760405162461bcd60e51b81526004016105dd90611d4a565b610c1d33848461126a565b50600192915050565b610c2e611415565b6001600160a01b0381166000818152610103602052604090819020805460ff19811660ff9182161590811790925591517f14ddf324cc5d8b14a3c3b12c84b0a7d578d72c8d60655c06d6a457e71431d5ee92610c8f92161515815260200190565b60405180910390a250565b610ca2611415565b6001600160a01b038116610cc85760405162461bcd60e51b81526004016105dd90611def565b609780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b610d1d611415565b6001600160a01b038116610d3057600080fd5b60fe80546001600160a01b0319166001600160a01b0383169081179091556040517fbdf37c276f641820b141429d245add2552b4118c0866e5a78638e3de5ef18d9d90600090a250565b6001600160a01b038116610da05760405162461bcd60e51b81526004016105dd90611def565b6097546001600160a01b03828116911614610e185760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b60648201526084016105dd565b6001600160a01b0381163314610e965760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e657200000000000060648201526084016105dd565b610e9f816116b0565b50565b610eaa611415565b6106c76114c1565b610eba611415565b6001600160a01b038116610ecd57600080fd5b61010080546001600160a01b0319166001600160a01b0383169081179091556040517f726b590ef91a8c76ad05bbe91a57ef84605276528f49cd47d787f558a4e755b690600090a250565b600054610100900460ff1615808015610f385750600054600160ff909116105b80610f525750303b158015610f52575060005460ff166001145b610fb55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016105dd565b6000805460ff191660011790558015610fd8576000805461ff0019166101001790555b6001600160a01b038316610feb57600080fd5b610ff3611870565b610ffb61189f565b61100586866118ce565b61100d6118ff565b60fc84905560fe80546001600160a01b0319166001600160a01b0385161790556101028290554260fd55801561107d576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b6001600160a01b0383166110e75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105dd565b6001600160a01b0382166111485760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105dd565b6001600160a01b0383811660008181526034602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60ca5460ff16156106c75760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105dd565b60006111fc8484610cea565b9050600019811461126457818110156112575760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105dd565b6112648484848403611085565b50505050565b6001600160a01b0383166112ce5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105dd565b6001600160a01b0382166113305760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105dd565b6001600160a01b038316600090815260336020526040902054818110156113a85760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105dd565b6001600160a01b0380851660008181526033602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906114089086815260200190565b60405180910390a3611264565b6065546001600160a01b031633146106c75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105dd565b611477611926565b60ca805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b60006201518060fd54426114d59190611ee3565b6114df9190611ea2565b905060018110610e9f5760006114f460355490565b60fc54909150819060005b848110156115395768056bc75e2d6310000061151b8385611ec4565b6115259190611ea2565b61152f9084611e8a565b92506001016114ff565b5060006115468484611ee3565b90506115558562015180611ec4565b60fd60008282546115669190611e8a565b909155505060fe54611581906001600160a01b0316826115ef565b60fe547f07982395c678b2ffc23fcf59aaec243ca79418c285af0d0e10b4e65bc4189f4c906001600160a01b0316426115b960355490565b604080516001600160a01b0390941684526020840192909252908201526060810183905260800160405180910390a15050505050565b6001600160a01b0382166116455760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105dd565b80603560008282546116579190611e8a565b90915550506001600160a01b0382166000818152603360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b61170a6111aa565b60ca805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114a43390565b6001600160a01b03821661179f5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105dd565b6001600160a01b038216600090815260336020526040902054818110156118135760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105dd565b6001600160a01b03831660008181526033602090815260408083208686039055603580548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161119d565b505050565b600054610100900460ff166118975760405162461bcd60e51b81526004016105dd90611e3f565b6106c761196f565b600054610100900460ff166118c65760405162461bcd60e51b81526004016105dd90611e3f565b6106c761199f565b600054610100900460ff166118f55760405162461bcd60e51b81526004016105dd90611e3f565b6107df82826119d2565b600054610100900460ff166106c75760405162461bcd60e51b81526004016105dd90611e3f565b60ca5460ff166106c75760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105dd565b600054610100900460ff166119965760405162461bcd60e51b81526004016105dd90611e3f565b6106c7336116b0565b600054610100900460ff166119c65760405162461bcd60e51b81526004016105dd90611e3f565b60ca805460ff19169055565b600054610100900460ff166119f95760405162461bcd60e51b81526004016105dd90611e3f565b8151611a0c906036906020850190611a1c565b50805161186b9060379060208401905b828054611a2890611efa565b90600052602060002090601f016020900481019282611a4a5760008555611a90565b82601f10611a6357805160ff1916838001178555611a90565b82800160010185558215611a90579182015b82811115611a90578251825591602001919060010190611a75565b50611a9c929150611aa0565b5090565b5b80821115611a9c5760008155600101611aa1565b80356001600160a01b0381168114611acc57600080fd5b919050565b600082601f830112611ae257600080fd5b813567ffffffffffffffff80821115611afd57611afd611f4b565b604051601f8301601f19908116603f01168101908282118183101715611b2557611b25611f4b565b81604052838152866020858801011115611b3e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b600060208284031215611b7057600080fd5b611b7982611ab5565b9392505050565b60008060408385031215611b9357600080fd5b611b9c83611ab5565b9150611baa60208401611ab5565b90509250929050565b600080600060608486031215611bc857600080fd5b611bd184611ab5565b9250611bdf60208501611ab5565b9150604084013590509250925092565b60008060408385031215611c0257600080fd5b611c0b83611ab5565b946020939093013593505050565b600060208284031215611c2b57600080fd5b813567ffffffffffffffff811115611c4257600080fd5b611c4e84828501611ad1565b949350505050565b600080600080600060a08688031215611c6e57600080fd5b853567ffffffffffffffff80821115611c8657600080fd5b611c9289838a01611ad1565b96506020880135915080821115611ca857600080fd5b50611cb588828901611ad1565b94505060408601359250611ccb60608701611ab5565b949793965091946080013592915050565b600060208284031215611cee57600080fd5b5035919050565b600060208083528351808285015260005b81811015611d2257858101830151858201604001528201611d06565b81811115611d34576000604083870101525b50601f01601f1916929092016040019392505050565b60208082526010908201526f1d1bc81a5cc81c995cdd1c9a58dd195960821b604082015260600190565b60208082526018908201527f6d73672e73656e64657220697320726573747269637465640000000000000000604082015260600190565b60208082526024908201527f496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d69604082015263373a32b960e11b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b60008219821115611e9d57611e9d611f35565b500190565b600082611ebf57634e487b7160e01b600052601260045260246000fd5b500490565b6000816000190483118215151615611ede57611ede611f35565b500290565b600082821015611ef557611ef5611f35565b500390565b600181811c90821680611f0e57607f821691505b60208210811415611f2f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220e62d23476f21f9323c5fc2be7476ca92d38c9f699706119e8572474603242a5364736f6c63430008070033",
    "sourceMap": "491:7462:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1184:21:5;;;;;-1:-1:-1;;;;;1184:21:5;;;;;;-1:-1:-1;;;;;3400:32:59;;;;3382:51;;3370:2;3355:18;1184:21:5;3236:203:59;4781:197:29;;;;;;:::i;:::-;;:::i;:::-;;;4031:14:59;;4024:22;4006:41;;3994:2;3979:18;4781:197:29;3866:187:59;3592:106:29;3679:12;;3592:106;;;14321:25:59;;;14309:2;14294:18;3592:106:29;14175:177:59;884:27:5;;;;;;7494:456;;;;;;:::i;:::-;;:::i;1248:28::-;;;;;;789:34;;;;;;3441:91:29;;;3523:2;4210:36:59;;4198:2;4183:18;3441:91:29;4058:194:59;6191:234:29;;;;;;:::i;:::-;;:::i;6444:76:5:-;;;:::i;:::-;;2408:371;;;;;;:::i;:::-;;:::i;5221:218::-;;;;;;:::i;:::-;;:::i;1858:84:28:-;1928:7;;;;1858:84;;4461:223:5;;;;;;:::i;:::-;;:::i;6175:175::-;;;;;;:::i;:::-;;:::i;3756:125:29:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3856:18:29;3830:7;3856:18;;;:9;:18;;;;;;;3756:125;2064:101:26;;;:::i;6364:72:5:-;;;:::i;1441:85:26:-;1513:6;;-1:-1:-1;;;;;1513:6:26;1441:85;;4843:177:5;;;;;;:::i;:::-;;:::i;2706:102:29:-;;;:::i;2963:290:5:-;;;;;;:::i;:::-;;:::i;1214:25::-;;;:::i;1052:28::-;;;;;-1:-1:-1;;;;;1052:28:5;;;6912:427:29;;;;;;:::i;:::-;;:::i;7011:297:5:-;;;;;;:::i;:::-;;:::i;6670:182::-;;;;;;:::i;:::-;;:::i;965:26::-;;;;;-1:-1:-1;;;;;965:26:5;;;863:220:3;;;;;;:::i;:::-;;:::i;1285:44:5:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;405:28:3;;;;;-1:-1:-1;;;;;405:28:3;;;4324:149:29;;;;;;:::i;:::-;-1:-1:-1;;;;;4439:18:29;;;4413:7;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4324:149;5538:209:5;;;;;;:::i;:::-;;:::i;442:413:3:-;;;;;;:::i;:::-;;:::i;4245:96:5:-;;;:::i;5863:174::-;;;;;;:::i;:::-;;:::i;1631:589::-;;;;;;:::i;:::-;;:::i;2495:98:29:-;2549:13;2581:5;2574:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2495:98;:::o;4781:197::-;4864:4;929:10:33;4918:32:29;929:10:33;4934:7:29;4943:6;4918:8;:32::i;:::-;-1:-1:-1;4967:4:29;;4781:197;-1:-1:-1;;;4781:197:29:o;7494:456:5:-;7631:4;1482:19:28;:17;:19::i;:::-;7670:10:5::1;7657:24;::::0;;;:12:::1;:24;::::0;;;;;::::1;;7656:25;7648:62;;;::::0;-1:-1:-1;;;7648:62:5;;::::1;::::0;::::1;;;:::i;:::-;;;;;;;;;-1:-1:-1::0;;;;;7730:16:5;::::1;;::::0;;;:12:::1;:16;::::0;;;;;::::1;;7729:17;7721:46;;;::::0;-1:-1:-1;;;7721:46:5;;6217:2:59;7721:46:5::1;::::0;::::1;6199:21:59::0;6256:2;6236:18;;;6229:30;-1:-1:-1;;;6275:18:59;;;6268:46;6331:18;;7721:46:5::1;6015:340:59::0;7721:46:5::1;-1:-1:-1::0;;;;;7787:18:5;::::1;;::::0;;;:12:::1;:18;::::0;;;;;::::1;;7786:19;7778:50;;;::::0;-1:-1:-1;;;7778:50:5;;13264:2:59;7778:50:5::1;::::0;::::1;13246:21:59::0;13303:2;13283:18;;;13276:30;-1:-1:-1;;;13322:18:59;;;13315:48;13380:18;;7778:50:5::1;13062:342:59::0;7778:50:5::1;7841:41;7857:4;7863:10;7875:6;7841:15;:41::i;:::-;7893:27;7903:4;7909:2;7913:6;7893:9;:27::i;6191:234:29:-:0;929:10:33;6279:4:29;4439:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4439:27:29;;;;;;;;;;6279:4;;929:10:33;6333:64:29;;929:10:33;;4439:27:29;;6358:38;;6386:10;;6358:38;:::i;:::-;6333:8;:64::i;6444:76:5:-;1334:13:26;:11;:13::i;:::-;6502:10:5::1;:8;:10::i;:::-;6444:76::o:0;2408:371::-;1482:19:28;:17;:19::i;:::-;1550:6:5::1;::::0;-1:-1:-1;;;;;1550:6:5::1;1536:10;:20;1528:69;;;::::0;-1:-1:-1;;;1528:69:5;;::::1;::::0;::::1;;;:::i;:::-;2538:13:::2;;2528:6;2512:13;3679:12:29::0;;;3592:106;2512:13:5::2;:22;;;;:::i;:::-;:39;;2504:78;;;::::0;-1:-1:-1;;;2504:78:5;;12092:2:59;2504:78:5::2;::::0;::::2;12074:21:59::0;12131:2;12111:18;;;12104:30;12170:28;12150:18;;;12143:56;12216:18;;2504:78:5::2;11890:350:59::0;2504:78:5::2;-1:-1:-1::0;;;;;2602:16:5;::::2;;::::0;;;:12:::2;:16;::::0;;;;;::::2;;2601:17;2593:46;;;::::0;-1:-1:-1;;;2593:46:5;;6217:2:59;2593:46:5::2;::::0;::::2;6199:21:59::0;6256:2;6236:18;;;6229:30;-1:-1:-1;;;6275:18:59;;;6268:46;6331:18;;2593:46:5::2;6015:340:59::0;2593:46:5::2;2672:10;2659:24;::::0;;;:12:::2;:24;::::0;;;;;::::2;;2658:25;2650:62;;;::::0;-1:-1:-1;;;2650:62:5;;::::2;::::0;::::2;;;:::i;:::-;2723:20;:18;:20::i;:::-;2754:17;2760:2;2764:6;2754:5;:17::i;:::-;2408:371:::0;;:::o;5221:218::-;1334:13:26;:11;:13::i;:::-;5310:20:5::1;:18;:20::i;:::-;5341:19;:42:::0;;;5399:32:::1;::::0;5363:20;;5399:32:::1;::::0;;;::::1;5221:218:::0;:::o;4461:223::-;1334:13:26;:11;:13::i;:::-;-1:-1:-1;;;;;4558:28:5;::::1;4550:37;;;::::0;::::1;;4598:13;:30:::0;;-1:-1:-1;;;;;;4598:30:5::1;-1:-1:-1::0;;;;;4598:30:5;::::1;::::0;;::::1;::::0;;;4644:32:::1;::::0;::::1;::::0;-1:-1:-1;;4644:32:5::1;4461:223:::0;:::o;6175:175::-;1334:13:26;:11;:13::i;:::-;6264::5::1;:30:::0;;;6310:32:::1;::::0;14321:25:59;;;6310:32:5::1;::::0;14309:2:59;14294:18;6310:32:5::1;;;;;;;;6175:175:::0;:::o;2064:101:26:-;1334:13;:11;:13::i;:::-;2128:30:::1;2155:1;2128:18;:30::i;6364:72:5:-:0;1334:13:26;:11;:13::i;:::-;6420:8:5::1;:6;:8::i;4843:177::-:0;1406:13;;-1:-1:-1;;;;;1406:13:5;1392:10;:27;1384:83;;;;-1:-1:-1;;;1384:83:5;;8907:2:59;1384:83:5;;;8889:21:59;8946:2;8926:18;;;8919:30;8985:34;8965:18;;;8958:62;-1:-1:-1;;;9036:18:59;;;9029:41;9087:19;;1384:83:5;8705:407:59;1384:83:5;4942:26;;::::1;::::0;:11:::1;::::0;:26:::1;::::0;::::1;::::0;::::1;:::i;:::-;;4984:28;4999:12;4984:28;;;;;;:::i;2706:102:29:-:0;2762:13;2794:7;2787:14;;;;;:::i;2963:290:5:-;1482:19:28;:17;:19::i;:::-;1550:6:5::1;::::0;-1:-1:-1;;;;;1550:6:5::1;1536:10;:20;1528:69;;;::::0;-1:-1:-1;;;1528:69:5;;::::1;::::0;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;3070:18:5;::::2;;::::0;;;:12:::2;:18;::::0;;;;;::::2;;3069:19;3061:50;;;::::0;-1:-1:-1;;;3061:50:5;;13264:2:59;3061:50:5::2;::::0;::::2;13246:21:59::0;13303:2;13283:18;;;13276:30;-1:-1:-1;;;13322:18:59;;;13315:48;13380:18;;3061:50:5::2;13062:342:59::0;3061:50:5::2;3144:10;3131:24;::::0;;;:12:::2;:24;::::0;;;;;::::2;;3130:25;3122:62;;;::::0;-1:-1:-1;;;3122:62:5;;::::2;::::0;::::2;;;:::i;:::-;3195:20;:18;:20::i;:::-;3226:19;3232:4;3238:6;3226:5;:19::i;1214:25::-:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6912:427:29:-;929:10:33;7005:4:29;4439:18;;;:11;:18;;;;;;;;-1:-1:-1;;;;;4439:27:29;;;;;;;;;;7005:4;;929:10:33;7129:35:29;;;;7121:85;;;;-1:-1:-1;;;7121:85:29;;13611:2:59;7121:85:29;;;13593:21:59;13650:2;13630:18;;;13623:30;13689:34;13669:18;;;13662:62;-1:-1:-1;;;13740:18:59;;;13733:35;13785:19;;7121:85:29;13409:401:59;7121:85:29;7240:60;7249:5;7256:7;7284:15;7265:16;:34;7240:8;:60::i;:::-;-1:-1:-1;7328:4:29;;6912:427;-1:-1:-1;;;;6912:427:29:o;7011:297:5:-;7096:4;1482:19:28;:17;:19::i;:::-;7135:10:5::1;7122:24;::::0;;;:12:::1;:24;::::0;;;;;::::1;;7121:25;7113:62;;;::::0;-1:-1:-1;;;7113:62:5;;::::1;::::0;::::1;;;:::i;:::-;-1:-1:-1::0;;;;;7195:16:5;::::1;;::::0;;;:12:::1;:16;::::0;;;;;::::1;;7194:17;7186:46;;;::::0;-1:-1:-1;;;7186:46:5;;6217:2:59;7186:46:5::1;::::0;::::1;6199:21:59::0;6256:2;6236:18;;;6229:30;-1:-1:-1;;;6275:18:59;;;6268:46;6331:18;;7186:46:5::1;6015:340:59::0;7186:46:5::1;7245:33;7255:10;7267:2;7271:6;7245:9;:33::i;:::-;-1:-1:-1::0;7296:4:5::1;7011:297:::0;;;;:::o;6670:182::-;1334:13:26;:11;:13::i;:::-;-1:-1:-1;;;;;6770:17:5;::::1;;::::0;;;:12:::1;:17;::::0;;;;;;;;;;-1:-1:-1;;6749:38:5;::::1;-1:-1:-1::0;6770:17:5;;::::1;6769:18;6749:38:::0;;::::1;::::0;;;6803:41;;6826:17;;4031:14:59;4024:22;4006:41;;6803::5;;::::1;::::0;;;;;;;;::::1;6670:182:::0;:::o;863:220:3:-;1334:13:26;:11;:13::i;:::-;-1:-1:-1;;;;;953:28:3;::::1;945:89;;;::::0;-1:-1:-1;;;945:89:3;;::::1;::::0;::::1;;;:::i;:::-;1045:13;:30:::0;;-1:-1:-1;;;;;;1045:30:3::1;-1:-1:-1::0;;;;;1045:30:3;;;::::1;::::0;;;::::1;::::0;;863:220::o;5538:209:5:-;1334:13:26;:11;:13::i;:::-;-1:-1:-1;;;;;5631:26:5;::::1;5623:35;;;::::0;::::1;;5669:11;:26:::0;;-1:-1:-1;;;;;;5669:26:5::1;-1:-1:-1::0;;;;;5669:26:5;::::1;::::0;;::::1;::::0;;;5711:28:::1;::::0;::::1;::::0;-1:-1:-1;;5711:28:5::1;5538:209:::0;:::o;442:413:3:-;-1:-1:-1;;;;;530:22:3;;522:83;;;;-1:-1:-1;;;522:83:3;;;;;;;:::i;:::-;636:13;;-1:-1:-1;;;;;624:25:3;;;636:13;;624:25;616:88;;;;-1:-1:-1;;;616:88:3;;8488:2:59;616:88:3;;;8470:21:59;8527:2;8507:18;;;8500:30;8566:34;8546:18;;;8539:62;-1:-1:-1;;;8617:18:59;;;8610:48;8675:19;;616:88:3;8286:414:59;616:88:3;-1:-1:-1;;;;;723:22:3;;735:10;723:22;715:93;;;;-1:-1:-1;;;715:93:3;;9664:2:59;715:93:3;;;9646:21:59;9703:2;9683:18;;;9676:30;9742:34;9722:18;;;9715:62;9813:28;9793:18;;;9786:56;9859:19;;715:93:3;9462:422:59;715:93:3;819:28;838:8;819:18;:28::i;:::-;442:413;:::o;4245:96:5:-;1334:13:26;:11;:13::i;:::-;4313:20:5::1;:18;:20::i;5863:174::-:0;1334:13:26;:11;:13::i;:::-;-1:-1:-1;;;;;5946:21:5;::::1;5938:30;;;::::0;::::1;;5979:6;:16:::0;;-1:-1:-1;;;;;;5979:16:5::1;-1:-1:-1::0;;;;;5979:16:5;::::1;::::0;;::::1;::::0;;;6011:18:::1;::::0;::::1;::::0;-1:-1:-1;;6011:18:5::1;5863:174:::0;:::o;1631:589::-;3279:19:27;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:27;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:27;1713:19:32;:23;;;3387:66:27;;-1:-1:-1;3436:12:27;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:27;;10091:2:59;3325:201:27;;;10073:21:59;10130:2;10110:18;;;10103:30;10169:34;10149:18;;;10142:62;-1:-1:-1;;;10220:18:59;;;10213:44;10274:19;;3325:201:27;9889:410:59;3325:201:27;3536:12;:16;;-1:-1:-1;;3536:16:27;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:27;;;;;3562:65;-1:-1:-1;;;;;1880:26:5;::::1;1872:35;;;::::0;::::1;;1920:16;:14;:16::i;:::-;1947:17;:15;:17::i;:::-;1975:36;1988:9;1999:11;1975:12;:36::i;:::-;2022:16;:14;:16::i;:::-;2051:19;:42:::0;;;2104:11:::1;:26:::0;;-1:-1:-1;;;;;;2104:26:5::1;-1:-1:-1::0;;;;;2104:26:5;::::1;;::::0;;2141:13:::1;:30:::0;;;2197:15:::1;2182:12;:30:::0;3647:99:27;;;;3697:5;3681:21;;-1:-1:-1;;3681:21:27;;;3721:14;;-1:-1:-1;4210:36:59;;3721:14:27;;4198:2:59;4183:18;3721:14:27;;;;;;;3647:99;3269:483;1631:589:5;;;;;:::o;10794:340:29:-;-1:-1:-1;;;;;10895:19:29;;10887:68;;;;-1:-1:-1;;;10887:68:29;;12447:2:59;10887:68:29;;;12429:21:59;12486:2;12466:18;;;12459:30;12525:34;12505:18;;;12498:62;-1:-1:-1;;;12576:18:59;;;12569:34;12620:19;;10887:68:29;12245:400:59;10887:68:29;-1:-1:-1;;;;;10973:21:29;;10965:68;;;;-1:-1:-1;;;10965:68:29;;6562:2:59;10965:68:29;;;6544:21:59;6601:2;6581:18;;;6574:30;6640:34;6620:18;;;6613:62;-1:-1:-1;;;6691:18:59;;;6684:32;6733:19;;10965:68:29;6360:398:59;10965:68:29;-1:-1:-1;;;;;11044:18:29;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11095:32;;14321:25:59;;;11095:32:29;;14294:18:59;11095:32:29;;;;;;;;10794:340;;;:::o;2010:106:28:-;1928:7;;;;2079:9;2071:38;;;;-1:-1:-1;;;2071:38:28;;9319:2:59;2071:38:28;;;9301:21:59;9358:2;9338:18;;;9331:30;-1:-1:-1;;;9377:18:59;;;9370:46;9433:18;;2071:38:28;9117:340:59;11415:411:29;-1:-1:-1;;;;;4439:18:29;;;11515:24;4439:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;-1:-1:-1;;11581:37:29;;11577:243;;11662:6;11642:16;:26;;11634:68;;;;-1:-1:-1;;;11634:68:29;;7723:2:59;11634:68:29;;;7705:21:59;7762:2;7742:18;;;7735:30;7801:31;7781:18;;;7774:59;7850:18;;11634:68:29;7521:353:59;11634:68:29;11744:51;11753:5;11760:7;11788:6;11769:16;:25;11744:8;:51::i;:::-;11505:321;11415:411;;;:::o;7793:788::-;-1:-1:-1;;;;;7889:18:29;;7881:68;;;;-1:-1:-1;;;7881:68:29;;11686:2:59;7881:68:29;;;11668:21:59;11725:2;11705:18;;;11698:30;11764:34;11744:18;;;11737:62;-1:-1:-1;;;11815:18:59;;;11808:35;11860:19;;7881:68:29;11484:401:59;7881:68:29;-1:-1:-1;;;;;7967:16:29;;7959:64;;;;-1:-1:-1;;;7959:64:29;;5061:2:59;7959:64:29;;;5043:21:59;5100:2;5080:18;;;5073:30;5139:34;5119:18;;;5112:62;-1:-1:-1;;;5190:18:59;;;5183:33;5233:19;;7959:64:29;4859:399:59;7959:64:29;-1:-1:-1;;;;;8105:15:29;;8083:19;8105:15;;;:9;:15;;;;;;8138:21;;;;8130:72;;;;-1:-1:-1;;;8130:72:29;;8081:2:59;8130:72:29;;;8063:21:59;8120:2;8100:18;;;8093:30;8159:34;8139:18;;;8132:62;-1:-1:-1;;;8210:18:59;;;8203:36;8256:19;;8130:72:29;7879:402:59;8130:72:29;-1:-1:-1;;;;;8236:15:29;;;;;;;:9;:15;;;;;;;;8254:20;;;8236:38;;8451:13;;;;;;;;;;:23;;;;;;8500:26;;14321:25:59;;;8500:26:29;;8451:13;;8500:26;;;;;;;;;;;8537:37;9712:659;1599:130:26;1513:6;;-1:-1:-1;;;;;1513:6:26;929:10:33;1662:23:26;1654:68;;;;-1:-1:-1;;;1654:68:26;;10506:2:59;1654:68:26;;;10488:21:59;;;10525:18;;;10518:30;10584:34;10564:18;;;10557:62;10636:18;;1654:68:26;10304:356:59;2676:117:28;1729:16;:14;:16::i;:::-;2734:7:::1;:15:::0;;-1:-1:-1;;2734:15:28::1;::::0;;2764:22:::1;929:10:33::0;2773:12:28::1;2764:22;::::0;;-1:-1:-1;;;;;3400:32:59;;;;3382:51;;2764:22:28;;;;;3370:2:59;2764:22:28;;::::1;2676:117::o:0;3261:754:5:-;3352:13;3403:6;3387:12;;3369:15;:30;;;;:::i;:::-;3368:41;;;;:::i;:::-;3352:57;;3435:1;3426:5;:10;3422:586;;3453:15;3471:13;3679:12:29;;;3592:106;3471:13:5;3557:19;;3453:31;;-1:-1:-1;3453:31:5;;3499:14;3593:178;3613:5;3609:1;:9;3593:178;;;692:4;3653:17;3662:8;3653:6;:17;:::i;:::-;3652:28;;;;:::i;:::-;3641:40;;;;:::i;:::-;;-1:-1:-1;3733:3:5;;3593:178;;;-1:-1:-1;3785:14:5;3802:16;3811:7;3802:6;:16;:::i;:::-;3785:33;-1:-1:-1;3849:14:5;3858:5;3849:6;:14;:::i;:::-;3833:12;;:30;;;;;;;:::i;:::-;;;;-1:-1:-1;;3884:11:5;;3878:26;;-1:-1:-1;;;;;3884:11:5;3897:6;3878:5;:26::i;:::-;3944:11;;3679:12:29;;3926:70:5;;;-1:-1:-1;;;;;3944:11:5;;;3675:51:59;;3957:15:5;3757:2:59;3742:18;;3735:34;3785:18;;;3778:34;;;;3843:2;3828:18;;3821:34;;;3926:70:5;;;;;;3662:3:59;3926:70:5;;;3438:570;;;;3300:715;3261:754::o;8857:535:29:-;-1:-1:-1;;;;;8940:21:29;;8932:65;;;;-1:-1:-1;;;8932:65:29;;14017:2:59;8932:65:29;;;13999:21:59;14056:2;14036:18;;;14029:30;14095:33;14075:18;;;14068:61;14146:18;;8932:65:29;13815:355:59;8932:65:29;9084:6;9068:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9236:18:29;;;;;;:9;:18;;;;;;;;:28;;;;;;9289:37;14321:25:59;;;9289:37:29;;14294:18:59;9289:37:29;;;;;;;2408:371:5;;:::o;2666:187:26:-;2758:6;;;-1:-1:-1;;;;;2774:17:26;;;-1:-1:-1;;;;;;2774:17:26;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;-1:-1:-1;;2806:40:26;2729:124;2666:187;:::o;2429:115:28:-;1482:19;:17;:19::i;:::-;2488:7:::1;:14:::0;;-1:-1:-1;;2488:14:28::1;2498:4;2488:14;::::0;;2517:20:::1;2524:12;929:10:33::0;;850:96;9712:659:29;-1:-1:-1;;;;;9795:21:29;;9787:67;;;;-1:-1:-1;;;9787:67:29;;11284:2:59;9787:67:29;;;11266:21:59;11323:2;11303:18;;;11296:30;11362:34;11342:18;;;11335:62;-1:-1:-1;;;11413:18:59;;;11406:31;11454:19;;9787:67:29;11082:397:59;9787:67:29;-1:-1:-1;;;;;9950:18:29;;9925:22;9950:18;;;:9;:18;;;;;;9986:24;;;;9978:71;;;;-1:-1:-1;;;9978:71:29;;5814:2:59;9978:71:29;;;5796:21:59;5853:2;5833:18;;;5826:30;5892:34;5872:18;;;5865:62;-1:-1:-1;;;5943:18:59;;;5936:32;5985:19;;9978:71:29;5612:398:59;9978:71:29;-1:-1:-1;;;;;10083:18:29;;;;;;:9;:18;;;;;;;;10104:23;;;10083:44;;10220:12;:22;;;;;;;10268:37;14321:25:59;;;10083:18:29;;;10268:37;;14294:18:59;10268:37:29;14175:177:59;10316:48:29;9777:594;9712:659;;:::o;1003:95:26:-;5374:13:27;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:27;;;;;;;:::i;:::-;1065:26:26::1;:24;:26::i;1063:97:28:-:0;5374:13:27;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:27;;;;;;;:::i;:::-;1126:27:28::1;:25;:27::i;2118:147:29:-:0;5374:13:27;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:27;;;;;;;:::i;:::-;2220:38:29::1;2243:5;2250:7;2220:22;:38::i;711:59:33:-:0;5374:13:27;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:27;;;;;;;:::i;2188:106:28:-;1928:7;;;;2246:41;;;;-1:-1:-1;;;2246:41:28;;5465:2:59;2246:41:28;;;5447:21:59;5504:2;5484:18;;;5477:30;-1:-1:-1;;;5523:18:59;;;5516:50;5583:18;;2246:41:28;5263:344:59;1104:111:26;5374:13:27;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:27;;;;;;;:::i;:::-;1176:32:26::1;929:10:33::0;1176:18:26::1;:32::i;1166:95:28:-:0;5374:13:27;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:27;;;;;;;:::i;:::-;1239:7:28::1;:15:::0;;-1:-1:-1;;1239:15:28::1;::::0;;1166:95::o;2271:159:29:-;5374:13:27;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:27;;;;;;;:::i;:::-;2383:13:29;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2406:17:29;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;-1:-1:-1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:59;82:20;;-1:-1:-1;;;;;131:31:59;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:719::-;235:5;288:3;281:4;273:6;269:17;265:27;255:55;;306:1;303;296:12;255:55;342:6;329:20;368:18;405:2;401;398:10;395:36;;;411:18;;:::i;:::-;486:2;480:9;454:2;540:13;;-1:-1:-1;;536:22:59;;;560:2;532:31;528:40;516:53;;;584:18;;;604:22;;;581:46;578:72;;;630:18;;:::i;:::-;670:10;666:2;659:22;705:2;697:6;690:18;751:3;744:4;739:2;731:6;727:15;723:26;720:35;717:55;;;768:1;765;758:12;717:55;832:2;825:4;817:6;813:17;806:4;798:6;794:17;781:54;879:1;872:4;867:2;859:6;855:15;851:26;844:37;899:6;890:15;;;;;;192:719;;;;:::o;916:186::-;975:6;1028:2;1016:9;1007:7;1003:23;999:32;996:52;;;1044:1;1041;1034:12;996:52;1067:29;1086:9;1067:29;:::i;:::-;1057:39;916:186;-1:-1:-1;;;916:186:59:o;1107:260::-;1175:6;1183;1236:2;1224:9;1215:7;1211:23;1207:32;1204:52;;;1252:1;1249;1242:12;1204:52;1275:29;1294:9;1275:29;:::i;:::-;1265:39;;1323:38;1357:2;1346:9;1342:18;1323:38;:::i;:::-;1313:48;;1107:260;;;;;:::o;1372:328::-;1449:6;1457;1465;1518:2;1506:9;1497:7;1493:23;1489:32;1486:52;;;1534:1;1531;1524:12;1486:52;1557:29;1576:9;1557:29;:::i;:::-;1547:39;;1605:38;1639:2;1628:9;1624:18;1605:38;:::i;:::-;1595:48;;1690:2;1679:9;1675:18;1662:32;1652:42;;1372:328;;;;;:::o;1705:254::-;1773:6;1781;1834:2;1822:9;1813:7;1809:23;1805:32;1802:52;;;1850:1;1847;1840:12;1802:52;1873:29;1892:9;1873:29;:::i;:::-;1863:39;1949:2;1934:18;;;;1921:32;;-1:-1:-1;;;1705:254:59:o;1964:322::-;2033:6;2086:2;2074:9;2065:7;2061:23;2057:32;2054:52;;;2102:1;2099;2092:12;2054:52;2142:9;2129:23;2175:18;2167:6;2164:30;2161:50;;;2207:1;2204;2197:12;2161:50;2230;2272:7;2263:6;2252:9;2248:22;2230:50;:::i;:::-;2220:60;1964:322;-1:-1:-1;;;;1964:322:59:o;2291:755::-;2406:6;2414;2422;2430;2438;2491:3;2479:9;2470:7;2466:23;2462:33;2459:53;;;2508:1;2505;2498:12;2459:53;2548:9;2535:23;2577:18;2618:2;2610:6;2607:14;2604:34;;;2634:1;2631;2624:12;2604:34;2657:50;2699:7;2690:6;2679:9;2675:22;2657:50;:::i;:::-;2647:60;;2760:2;2749:9;2745:18;2732:32;2716:48;;2789:2;2779:8;2776:16;2773:36;;;2805:1;2802;2795:12;2773:36;;2828:52;2872:7;2861:8;2850:9;2846:24;2828:52;:::i;:::-;2818:62;;;2927:2;2916:9;2912:18;2899:32;2889:42;;2950:38;2984:2;2973:9;2969:18;2950:38;:::i;:::-;2291:755;;;;-1:-1:-1;2291:755:59;;3035:3;3020:19;3007:33;;2291:755;-1:-1:-1;;2291:755:59:o;3051:180::-;3110:6;3163:2;3151:9;3142:7;3138:23;3134:32;3131:52;;;3179:1;3176;3169:12;3131:52;-1:-1:-1;3202:23:59;;3051:180;-1:-1:-1;3051:180:59:o;4257:597::-;4369:4;4398:2;4427;4416:9;4409:21;4459:6;4453:13;4502:6;4497:2;4486:9;4482:18;4475:34;4527:1;4537:140;4551:6;4548:1;4545:13;4537:140;;;4646:14;;;4642:23;;4636:30;4612:17;;;4631:2;4608:26;4601:66;4566:10;;4537:140;;;4695:6;4692:1;4689:13;4686:91;;;4765:1;4760:2;4751:6;4740:9;4736:22;4732:31;4725:42;4686:91;-1:-1:-1;4838:2:59;4817:15;-1:-1:-1;;4813:29:59;4798:45;;;;4845:2;4794:54;;4257:597;-1:-1:-1;;;4257:597:59:o;6763:348::-;6965:2;6947:21;;;7004:2;6984:18;;;6977:30;7043:26;7038:2;7023:18;;7016:54;7102:2;7087:18;;6763:348::o;7116:400::-;7318:2;7300:21;;;7357:2;7337:18;;;7330:30;7396:34;7391:2;7376:18;;7369:62;-1:-1:-1;;;7462:2:59;7447:18;;7440:34;7506:3;7491:19;;7116:400::o;10665:412::-;10867:2;10849:21;;;10906:2;10886:18;;;10879:30;10945:34;10940:2;10925:18;;10918:62;-1:-1:-1;;;11011:2:59;10996:18;;10989:46;-1:-1:-1;11052:19:59;;10665:412::o;12650:407::-;12852:2;12834:21;;;12891:2;12871:18;;;12864:30;12930:34;12925:2;12910:18;;12903:62;-1:-1:-1;;;12996:2:59;12981:18;;12974:41;13047:3;13032:19;;12650:407::o;14546:128::-;14586:3;14617:1;14613:6;14610:1;14607:13;14604:39;;;14623:18;;:::i;:::-;-1:-1:-1;14659:9:59;;14546:128::o;14679:217::-;14719:1;14745;14735:132;;14789:10;14784:3;14780:20;14777:1;14770:31;14824:4;14821:1;14814:15;14852:4;14849:1;14842:15;14735:132;-1:-1:-1;14881:9:59;;14679:217::o;14901:168::-;14941:7;15007:1;15003;14999:6;14995:14;14992:1;14989:21;14984:1;14977:9;14970:17;14966:45;14963:71;;;15014:18;;:::i;:::-;-1:-1:-1;15054:9:59;;14901:168::o;15074:125::-;15114:4;15142:1;15139;15136:8;15133:34;;;15147:18;;:::i;:::-;-1:-1:-1;15184:9:59;;15074:125::o;15204:380::-;15283:1;15279:12;;;;15326;;;15347:61;;15401:4;15393:6;15389:17;15379:27;;15347:61;15454:2;15446:6;15443:14;15423:18;15420:38;15417:161;;;15500:10;15495:3;15491:20;15488:1;15481:31;15535:4;15532:1;15525:15;15563:4;15560:1;15553:15;15417:161;;15204:380;;;:::o;15589:127::-;15650:10;15645:3;15641:20;15638:1;15631:31;15681:4;15678:1;15671:15;15705:4;15702:1;15695:15;15721:127;15782:10;15777:3;15773:20;15770:1;15763:31;15813:4;15810:1;15803:15;15837:4;15834:1;15827:15",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(address,uint256)": "9dc29fac",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "feeRatePerDayScaled()": "2fecd589",
    "feeReceiver()": "b3f00674",
    "feeTimestamp()": "184a732f",
    "increaseAllowance(address,uint256)": "39509351",
    "initialize(string,string,uint256,address,uint256)": "fede0276",
    "isRestricted(address)": "c01bc982",
    "methodologist()": "9f8e67bf",
    "methodology()": "9eeb1d50",
    "mint(address,uint256)": "40c10f19",
    "mintToFeeReceiver()": "f734e22a",
    "minter()": "07546172",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "proposeOwner(address)": "b5ed298a",
    "proposedOwner()": "d153b60c",
    "renounceOwnership()": "715018a6",
    "setFeeRate(uint256)": "45596e2e",
    "setFeeReceiver(address)": "efdcd974",
    "setMethodologist(address)": "660db484",
    "setMethodology(string)": "91fe1b92",
    "setMinter(address)": "fca3b5aa",
    "setSupplyCeiling(uint256)": "6e01a686",
    "supplyCeiling()": "2b52684d",
    "symbol()": "95d89b41",
    "toggleRestriction(address)": "aaa4a184",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "unpause()": "3f4ba83a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"feeRatePerDayScaled\",\"type\":\"uint256\"}],\"name\":\"FeeRateSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"}],\"name\":\"FeeReceiverSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"methodologist\",\"type\":\"address\"}],\"name\":\"MethodologistSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"methodology\",\"type\":\"string\"}],\"name\":\"MethodologySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeReceiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"MintFeeToReceiver\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"MinterSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"supplyCeiling\",\"type\":\"uint256\"}],\"name\":\"SupplyCeilingSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isRestricted\",\"type\":\"bool\"}],\"name\":\"ToggledRestricted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeRatePerDayScaled\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeReceiver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"tokenName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"tokenSymbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_feeRatePerDayScaled\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_supplyCeiling\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRestricted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"methodologist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"methodology\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintToFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proposedOwner\",\"type\":\"address\"}],\"name\":\"proposeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeRatePerDayScaled\",\"type\":\"uint256\"}],\"name\":\"setFeeRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"setFeeReceiver\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_methodologist\",\"type\":\"address\"}],\"name\":\"setMethodologist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_methodology\",\"type\":\"string\"}],\"name\":\"setMethodology\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_supplyCeiling\",\"type\":\"uint256\"}],\"name\":\"setSupplyCeiling\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supplyCeiling\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"toggleRestriction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NEX Labs Protocol\",\"details\":\"This contract uses an upgradeable pattern\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"details\":\"burn function can only be called externally by the controller\",\"params\":{\"amount\":\"uint256\",\"from\":\"address\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"details\":\"Mint function can only be called externally by the controller\",\"params\":{\"amount\":\"uint256\",\"to\":\"address\"}},\"mintToFeeReceiver()\":{\"details\":\"Can only be called by the owner externally,_mintToFeeReciver is the internal function and is called after each supply/rate change\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFeeRate(uint256)\":{\"details\":\"Given the annual fee rate this function sets and calculates the rate per second\",\"params\":{\"_feeRatePerDayScaled\":\"uint256\"}},\"setFeeReceiver(address)\":{\"params\":{\"_feeReceiver\":\"address\"}},\"setMethodologist(address)\":{\"params\":{\"_methodologist\":\"address\"}},\"setMethodology(string)\":{\"params\":{\"_methodology\":\"string\"}},\"setMinter(address)\":{\"params\":{\"_minter\":\"address\"}},\"setSupplyCeiling(uint256)\":{\"params\":{\"_supplyCeiling\":\"uint256\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"toggleRestriction(address)\":{\"details\":\"Negates current restriction state\",\"params\":{\"who\":\"address\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"params\":{\"amount\":\"uint256\",\"to\":\"address\"},\"returns\":{\"_0\":\"bool\"}},\"transferFrom(address,address,uint256)\":{\"params\":{\"amount\":\"uint256\",\"from\":\"address\",\"to\":\"address\"},\"returns\":{\"_0\":\"bool\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Index Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"External burn function\"},\"initialize(string,string,uint256,address,uint256)\":{\"notice\":\"============================================================================================= Initializer =============================================================================================\"},\"mint(address,uint256)\":{\"notice\":\"External mint function\"},\"mintToFeeReceiver()\":{\"notice\":\"Expands supply and mints fees to fee reciever\"},\"pause()\":{\"notice\":\"============================================================================================= Pausable Logic =============================================================================================\"},\"setFeeRate(uint256)\":{\"notice\":\"Ownable function to set the fee rate\"},\"setFeeReceiver(address)\":{\"notice\":\"Ownable function to set the receiver\"},\"setMethodologist(address)\":{\"notice\":\"Only owner function for setting the methodologist\"},\"setMethodology(string)\":{\"notice\":\"Callable only by the methodoligst to store on chain data about the underlying weight of the token\"},\"setMinter(address)\":{\"notice\":\"Ownable function to set the contract that controls minting\"},\"setSupplyCeiling(uint256)\":{\"notice\":\"Ownable function to set the limit at which the total supply cannot exceed\"},\"toggleRestriction(address)\":{\"notice\":\"Compliance feature to blacklist bad actors\"},\"transfer(address,uint256)\":{\"notice\":\"Overriden ERC20 transfer to include restriction\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Overriden ERC20 transferFrom to include restriction\"}},\"notice\":\"The main token contract for Index Token (NEX Labs Protocol)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/token/IndexToken.sol\":\"IndexToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@thirdweb-dev/=node_modules/@thirdweb-dev/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc721a-upgradeable/=node_modules/erc721a-upgradeable/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\",\":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/\"]},\"sources\":{\"contracts/proposable/ProposableOwnableUpgradeable.sol\":{\"keccak256\":\"0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65\",\"dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72\"]},\"contracts/token/IndexToken.sol\":{\"keccak256\":\"0xd59e5349d3cec4316e0dc5f50f61d6a9f9a943fc9a5894f38a3f79f13e8ab986\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://017377a199dbb1d3dea0b06ed18d901c03aeaf08f535c877966413e81ee01204\",\"dweb:/ipfs/QmWkW5rAmNmbFBn5VX7be9y211jTPg8ZWiGxFyeizMWgbr\"]},\"contracts/token/TokenInterface.sol\":{\"keccak256\":\"0xd530600bcc7a81e3996517a2c6967dd448b2b9702eca4efe15f772de69c6d880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f61d2aab02ee0f4c376b1b41629632d894c52127cd15669e9ffca3fb21f1307\",\"dweb:/ipfs/Qmb47gpnWD7i6Va4nKcmg7kPyaYcpXb74QFCQePomaJjZj\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "feeRatePerDayScaled",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeRateSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FeeReceiverSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "methodologist",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MethodologistSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "methodology",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MethodologySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "feeReceiver",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "totalSupply",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "MintFeeToReceiver",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MinterSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "supplyCeiling",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SupplyCeilingSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "isRestricted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ToggledRestricted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeRatePerDayScaled",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeReceiver",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "feeTimestamp",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "tokenName",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "tokenSymbol",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "_feeRatePerDayScaled",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_feeReceiver",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_supplyCeiling",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isRestricted",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "methodologist",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "methodology",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mintToFeeReceiver"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_proposedOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proposeOwner"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposedOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_feeRatePerDayScaled",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeRate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_feeReceiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFeeReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_methodologist",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMethodologist"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_methodology",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMethodology"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinter"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_supplyCeiling",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setSupplyCeiling"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "supplyCeiling",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "who",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "toggleRestriction"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(address,uint256)": {
            "details": "burn function can only be called externally by the controller",
            "params": {
              "amount": "uint256",
              "from": "address"
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mint(address,uint256)": {
            "details": "Mint function can only be called externally by the controller",
            "params": {
              "amount": "uint256",
              "to": "address"
            }
          },
          "mintToFeeReceiver()": {
            "details": "Can only be called by the owner externally,_mintToFeeReciver is the internal function and is called after each supply/rate change"
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "paused()": {
            "details": "Returns true if the contract is paused, and false otherwise."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setFeeRate(uint256)": {
            "details": "Given the annual fee rate this function sets and calculates the rate per second",
            "params": {
              "_feeRatePerDayScaled": "uint256"
            }
          },
          "setFeeReceiver(address)": {
            "params": {
              "_feeReceiver": "address"
            }
          },
          "setMethodologist(address)": {
            "params": {
              "_methodologist": "address"
            }
          },
          "setMethodology(string)": {
            "params": {
              "_methodology": "string"
            }
          },
          "setMinter(address)": {
            "params": {
              "_minter": "address"
            }
          },
          "setSupplyCeiling(uint256)": {
            "params": {
              "_supplyCeiling": "uint256"
            }
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "toggleRestriction(address)": {
            "details": "Negates current restriction state",
            "params": {
              "who": "address"
            }
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "params": {
              "amount": "uint256",
              "to": "address"
            },
            "returns": {
              "_0": "bool"
            }
          },
          "transferFrom(address,address,uint256)": {
            "params": {
              "amount": "uint256",
              "from": "address",
              "to": "address"
            },
            "returns": {
              "_0": "bool"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(address,uint256)": {
            "notice": "External burn function"
          },
          "initialize(string,string,uint256,address,uint256)": {
            "notice": "============================================================================================= Initializer ============================================================================================="
          },
          "mint(address,uint256)": {
            "notice": "External mint function"
          },
          "mintToFeeReceiver()": {
            "notice": "Expands supply and mints fees to fee reciever"
          },
          "pause()": {
            "notice": "============================================================================================= Pausable Logic ============================================================================================="
          },
          "setFeeRate(uint256)": {
            "notice": "Ownable function to set the fee rate"
          },
          "setFeeReceiver(address)": {
            "notice": "Ownable function to set the receiver"
          },
          "setMethodologist(address)": {
            "notice": "Only owner function for setting the methodologist"
          },
          "setMethodology(string)": {
            "notice": "Callable only by the methodoligst to store on chain data about the underlying weight of the token"
          },
          "setMinter(address)": {
            "notice": "Ownable function to set the contract that controls minting"
          },
          "setSupplyCeiling(uint256)": {
            "notice": "Ownable function to set the limit at which the total supply cannot exceed"
          },
          "toggleRestriction(address)": {
            "notice": "Compliance feature to blacklist bad actors"
          },
          "transfer(address,uint256)": {
            "notice": "Overriden ERC20 transfer to include restriction"
          },
          "transferFrom(address,address,uint256)": {
            "notice": "Overriden ERC20 transferFrom to include restriction"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@chainlink/=node_modules/@chainlink/",
        ":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@thirdweb-dev/=node_modules/@thirdweb-dev/",
        ":base64-sol/=node_modules/base64-sol/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc721a-upgradeable/=node_modules/erc721a-upgradeable/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/",
        ":sstore2/=node_modules/@thirdweb-dev/dynamic-contracts/lib/sstore2/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/token/IndexToken.sol": "IndexToken"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/proposable/ProposableOwnableUpgradeable.sol": {
        "keccak256": "0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70",
        "urls": [
          "bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65",
          "dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72"
        ],
        "license": "MIT"
      },
      "contracts/token/IndexToken.sol": {
        "keccak256": "0xd59e5349d3cec4316e0dc5f50f61d6a9f9a943fc9a5894f38a3f79f13e8ab986",
        "urls": [
          "bzz-raw://017377a199dbb1d3dea0b06ed18d901c03aeaf08f535c877966413e81ee01204",
          "dweb:/ipfs/QmWkW5rAmNmbFBn5VX7be9y211jTPg8ZWiGxFyeizMWgbr"
        ],
        "license": "MIT"
      },
      "contracts/token/TokenInterface.sol": {
        "keccak256": "0xd530600bcc7a81e3996517a2c6967dd448b2b9702eca4efe15f772de69c6d880",
        "urls": [
          "bzz-raw://6f61d2aab02ee0f4c376b1b41629632d894c52127cd15669e9ffca3fb21f1307",
          "dweb:/ipfs/Qmb47gpnWD7i6Va4nKcmg7kPyaYcpXb74QFCQePomaJjZj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/token/IndexToken.sol",
    "id": 1963,
    "exportedSymbols": {
      "AddressUpgradeable": [
        46906
      ],
      "ContextUpgradeable": [
        46948
      ],
      "ERC20Upgradeable": [
        46473
      ],
      "IERC20MetadataUpgradeable": [
        46576
      ],
      "IERC20Upgradeable": [
        46551
      ],
      "IndexToken": [
        1962
      ],
      "Initializable": [
        45734
      ],
      "OwnableUpgradeable": [
        45565
      ],
      "PausableUpgradeable": [
        45861
      ],
      "ProposableOwnableUpgradeable": [
        1383
      ],
      "TokenInterface": [
        2088
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:7920:5",
    "nodes": [
      {
        "id": 1385,
        "nodeType": "PragmaDirective",
        "src": "33:22:5",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 1386,
        "nodeType": "ImportDirective",
        "src": "59:56:5",
        "nodes": [],
        "absolutePath": "contracts/proposable/ProposableOwnableUpgradeable.sol",
        "file": "../proposable/ProposableOwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1963,
        "sourceUnit": 1384,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1387,
        "nodeType": "ImportDirective",
        "src": "117:78:5",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1963,
        "sourceUnit": 45862,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1388,
        "nodeType": "ImportDirective",
        "src": "197:78:5",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1963,
        "sourceUnit": 46474,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1389,
        "nodeType": "ImportDirective",
        "src": "277:30:5",
        "nodes": [],
        "absolutePath": "contracts/token/TokenInterface.sol",
        "file": "./TokenInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 1963,
        "sourceUnit": 2089,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 1962,
        "nodeType": "ContractDefinition",
        "src": "491:7462:5",
        "nodes": [
          {
            "id": 1403,
            "nodeType": "VariableDeclaration",
            "src": "657:39:5",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "SCALAR",
            "nameLocation": "683:6:5",
            "scope": 1962,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1401,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "657:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31653230",
              "id": 1402,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "692:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000000000000000000_by_1",
                "typeString": "int_const 100000000000000000000"
              },
              "value": "1e20"
            },
            "visibility": "internal"
          },
          {
            "id": 1405,
            "nodeType": "VariableDeclaration",
            "src": "789:34:5",
            "nodes": [],
            "constant": false,
            "functionSelector": "2fecd589",
            "mutability": "mutable",
            "name": "feeRatePerDayScaled",
            "nameLocation": "804:19:5",
            "scope": 1962,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1404,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "789:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1407,
            "nodeType": "VariableDeclaration",
            "src": "884:27:5",
            "nodes": [],
            "constant": false,
            "functionSelector": "184a732f",
            "mutability": "mutable",
            "name": "feeTimestamp",
            "nameLocation": "899:12:5",
            "scope": 1962,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1406,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "884:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1409,
            "nodeType": "VariableDeclaration",
            "src": "965:26:5",
            "nodes": [],
            "constant": false,
            "functionSelector": "b3f00674",
            "mutability": "mutable",
            "name": "feeReceiver",
            "nameLocation": "980:11:5",
            "scope": 1962,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1408,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "965:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1411,
            "nodeType": "VariableDeclaration",
            "src": "1052:28:5",
            "nodes": [],
            "constant": false,
            "functionSelector": "9f8e67bf",
            "mutability": "mutable",
            "name": "methodologist",
            "nameLocation": "1067:13:5",
            "scope": 1962,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1410,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1052:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1413,
            "nodeType": "VariableDeclaration",
            "src": "1184:21:5",
            "nodes": [],
            "constant": false,
            "functionSelector": "07546172",
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "1199:6:5",
            "scope": 1962,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1412,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1184:7:5",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1415,
            "nodeType": "VariableDeclaration",
            "src": "1214:25:5",
            "nodes": [],
            "constant": false,
            "functionSelector": "9eeb1d50",
            "mutability": "mutable",
            "name": "methodology",
            "nameLocation": "1228:11:5",
            "scope": 1962,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 1414,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1214:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1417,
            "nodeType": "VariableDeclaration",
            "src": "1248:28:5",
            "nodes": [],
            "constant": false,
            "functionSelector": "2b52684d",
            "mutability": "mutable",
            "name": "supplyCeiling",
            "nameLocation": "1263:13:5",
            "scope": 1962,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1416,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1248:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 1421,
            "nodeType": "VariableDeclaration",
            "src": "1285:44:5",
            "nodes": [],
            "constant": false,
            "functionSelector": "c01bc982",
            "mutability": "mutable",
            "name": "isRestricted",
            "nameLocation": "1317:12:5",
            "scope": 1962,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 1420,
              "keyType": {
                "id": 1418,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1293:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1285:24:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 1419,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1304:4:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 1433,
            "nodeType": "ModifierDefinition",
            "src": "1344:143:5",
            "nodes": [],
            "body": {
              "id": 1432,
              "nodeType": "Block",
              "src": "1373:114:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1424,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1392:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1392:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1426,
                          "name": "methodologist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1411,
                          "src": "1406:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1392:27:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d6574686f646f6c6f67697374",
                        "id": 1428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1421:45:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6495b064261cd723792edaea6983aedde45829fc71123661796bf11478985e61",
                          "typeString": "literal_string \"IndexToken: caller is not the methodologist\""
                        },
                        "value": "IndexToken: caller is not the methodologist"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6495b064261cd723792edaea6983aedde45829fc71123661796bf11478985e61",
                          "typeString": "literal_string \"IndexToken: caller is not the methodologist\""
                        }
                      ],
                      "id": 1423,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1384:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:83:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1430,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:83:5"
                },
                {
                  "id": 1431,
                  "nodeType": "PlaceholderStatement",
                  "src": "1478:1:5"
                }
              ]
            },
            "name": "onlyMethodologist",
            "nameLocation": "1353:17:5",
            "parameters": {
              "id": 1422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1370:2:5"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1445,
            "nodeType": "ModifierDefinition",
            "src": "1495:122:5",
            "nodes": [],
            "body": {
              "id": 1444,
              "nodeType": "Block",
              "src": "1517:100:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1436,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1536:3:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1536:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1438,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1413,
                          "src": "1550:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1536:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e646578546f6b656e3a2063616c6c6572206973206e6f7420746865206d696e746572",
                        "id": 1440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1558:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3a90fb2a8327fe6d3a121a4e6690fd254668cd113738fc219dd278c3edb8c045",
                          "typeString": "literal_string \"IndexToken: caller is not the minter\""
                        },
                        "value": "IndexToken: caller is not the minter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3a90fb2a8327fe6d3a121a4e6690fd254668cd113738fc219dd278c3edb8c045",
                          "typeString": "literal_string \"IndexToken: caller is not the minter\""
                        }
                      ],
                      "id": 1435,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1528:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1528:69:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1442,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:69:5"
                },
                {
                  "id": 1443,
                  "nodeType": "PlaceholderStatement",
                  "src": "1608:1:5"
                }
              ]
            },
            "name": "onlyMinter",
            "nameLocation": "1504:10:5",
            "parameters": {
              "id": 1434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1514:2:5"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1502,
            "nodeType": "FunctionDefinition",
            "src": "1631:589:5",
            "nodes": [],
            "body": {
              "id": 1501,
              "nodeType": "Block",
              "src": "1861:359:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1462,
                          "name": "_feeReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1453,
                          "src": "1880:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1465,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1904:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1896:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1463,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1896:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1466,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1896:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1880:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1461,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1872:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1872:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1469,
                  "nodeType": "ExpressionStatement",
                  "src": "1872:35:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1470,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45460,
                      "src": "1920:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1920:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1472,
                  "nodeType": "ExpressionStatement",
                  "src": "1920:16:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1473,
                      "name": "__Pausable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45765,
                      "src": "1947:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1947:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1475,
                  "nodeType": "ExpressionStatement",
                  "src": "1947:17:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1477,
                        "name": "tokenName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1447,
                        "src": "1988:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1478,
                        "name": "tokenSymbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1449,
                        "src": "1999:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1476,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45908,
                      "src": "1975:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 1479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1975:36:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1480,
                  "nodeType": "ExpressionStatement",
                  "src": "1975:36:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1481,
                      "name": "__Context_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46918,
                      "src": "2022:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1482,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2022:16:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1483,
                  "nodeType": "ExpressionStatement",
                  "src": "2022:16:5"
                },
                {
                  "expression": {
                    "id": 1486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1484,
                      "name": "feeRatePerDayScaled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1405,
                      "src": "2051:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1485,
                      "name": "_feeRatePerDayScaled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1451,
                      "src": "2073:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2051:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1487,
                  "nodeType": "ExpressionStatement",
                  "src": "2051:42:5"
                },
                {
                  "expression": {
                    "id": 1490,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1488,
                      "name": "feeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1409,
                      "src": "2104:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1489,
                      "name": "_feeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1453,
                      "src": "2118:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2104:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1491,
                  "nodeType": "ExpressionStatement",
                  "src": "2104:26:5"
                },
                {
                  "expression": {
                    "id": 1494,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1492,
                      "name": "supplyCeiling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1417,
                      "src": "2141:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1493,
                      "name": "_supplyCeiling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1455,
                      "src": "2157:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2141:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1495,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:30:5"
                },
                {
                  "expression": {
                    "id": 1499,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1496,
                      "name": "feeTimestamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1407,
                      "src": "2182:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1497,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "2197:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1498,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "2197:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2182:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1500,
                  "nodeType": "ExpressionStatement",
                  "src": "2182:30:5"
                }
              ]
            },
            "baseFunctions": [
              2018
            ],
            "functionSelector": "fede0276",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1459,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1458,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45636,
                  "src": "1849:11:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "1849:11:5"
              }
            ],
            "name": "initialize",
            "nameLocation": "1640:10:5",
            "overrides": {
              "id": 1457,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1840:8:5"
            },
            "parameters": {
              "id": 1456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1447,
                  "mutability": "mutable",
                  "name": "tokenName",
                  "nameLocation": "1675:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1502,
                  "src": "1661:23:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1446,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1661:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1449,
                  "mutability": "mutable",
                  "name": "tokenSymbol",
                  "nameLocation": "1709:11:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1502,
                  "src": "1695:25:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1448,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1695:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1451,
                  "mutability": "mutable",
                  "name": "_feeRatePerDayScaled",
                  "nameLocation": "1739:20:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1502,
                  "src": "1731:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1450,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1731:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1453,
                  "mutability": "mutable",
                  "name": "_feeReceiver",
                  "nameLocation": "1778:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1502,
                  "src": "1770:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1452,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1770:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1455,
                  "mutability": "mutable",
                  "name": "_supplyCeiling",
                  "nameLocation": "1809:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1502,
                  "src": "1801:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1454,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1650:180:5"
            },
            "returnParameters": {
              "id": 1460,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1861:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1551,
            "nodeType": "FunctionDefinition",
            "src": "2408:371:5",
            "nodes": [],
            "body": {
              "id": 1550,
              "nodeType": "Block",
              "src": "2493:286:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1519,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 1516,
                              "name": "totalSupply",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45966,
                              "src": "2512:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 1517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2512:13:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 1518,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1507,
                            "src": "2528:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2512:22:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 1520,
                          "name": "supplyCeiling",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1417,
                          "src": "2538:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2512:39:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "77696c6c2065786365656420737570706c79206365696c696e67",
                        "id": 1522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2553:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc92595dbb409de1d426fa39c98b3cffdd700bcf7c02676dc21ae9dc3573d87b",
                          "typeString": "literal_string \"will exceed supply ceiling\""
                        },
                        "value": "will exceed supply ceiling"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc92595dbb409de1d426fa39c98b3cffdd700bcf7c02676dc21ae9dc3573d87b",
                          "typeString": "literal_string \"will exceed supply ceiling\""
                        }
                      ],
                      "id": 1515,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2504:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2504:78:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1524,
                  "nodeType": "ExpressionStatement",
                  "src": "2504:78:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2601:17:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1526,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1421,
                            "src": "2602:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1528,
                          "indexExpression": {
                            "id": 1527,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1505,
                            "src": "2615:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2602:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f2069732072657374726963746564",
                        "id": 1530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2620:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20fb04da0a3c46b67f46e54fe5e85e6a641db1764c2d05a4e674b989b4b4d7d6",
                          "typeString": "literal_string \"to is restricted\""
                        },
                        "value": "to is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20fb04da0a3c46b67f46e54fe5e85e6a641db1764c2d05a4e674b989b4b4d7d6",
                          "typeString": "literal_string \"to is restricted\""
                        }
                      ],
                      "id": 1525,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2593:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2593:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1532,
                  "nodeType": "ExpressionStatement",
                  "src": "2593:46:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "2658:25:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1534,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1421,
                            "src": "2659:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1537,
                          "indexExpression": {
                            "expression": {
                              "id": 1535,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "2672:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2672:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2659:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d73672e73656e6465722069732072657374726963746564",
                        "id": 1539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2685:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        },
                        "value": "msg.sender is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        }
                      ],
                      "id": 1533,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2650:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2650:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1541,
                  "nodeType": "ExpressionStatement",
                  "src": "2650:62:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1542,
                      "name": "_mintToFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1670,
                      "src": "2723:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2723:20:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1544,
                  "nodeType": "ExpressionStatement",
                  "src": "2723:20:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1546,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1505,
                        "src": "2760:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1547,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1507,
                        "src": "2764:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1545,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46285,
                      "src": "2754:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2754:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1549,
                  "nodeType": "ExpressionStatement",
                  "src": "2754:17:5"
                }
              ]
            },
            "baseFunctions": [
              2026
            ],
            "documentation": {
              "id": 1503,
              "nodeType": "StructuredDocumentation",
              "src": "2234:168:5",
              "text": "@notice External mint function\n @dev Mint function can only be called externally by the controller\n @param to address\n @param amount uint256"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1511,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1510,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45783,
                  "src": "2468:13:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2468:13:5"
              },
              {
                "id": 1513,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1512,
                  "name": "onlyMinter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1445,
                  "src": "2482:10:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "2482:10:5"
              }
            ],
            "name": "mint",
            "nameLocation": "2417:4:5",
            "overrides": {
              "id": 1509,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2459:8:5"
            },
            "parameters": {
              "id": 1508,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1505,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2430:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "2422:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2422:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1507,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2442:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1551,
                  "src": "2434:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1506,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2434:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2421:28:5"
            },
            "returnParameters": {
              "id": 1514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2493:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1590,
            "nodeType": "FunctionDefinition",
            "src": "2963:290:5",
            "nodes": [],
            "body": {
              "id": 1589,
              "nodeType": "Block",
              "src": "3050:203:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3069:19:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1565,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1421,
                            "src": "3070:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1567,
                          "indexExpression": {
                            "id": 1566,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1554,
                            "src": "3083:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3070:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66726f6d2069732072657374726963746564",
                        "id": 1569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3090:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7c94ad03512178aaaa18bb65554bce6f67cf0ed71115cfc1109bd05ddaff6a3",
                          "typeString": "literal_string \"from is restricted\""
                        },
                        "value": "from is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7c94ad03512178aaaa18bb65554bce6f67cf0ed71115cfc1109bd05ddaff6a3",
                          "typeString": "literal_string \"from is restricted\""
                        }
                      ],
                      "id": 1564,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3061:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3061:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1571,
                  "nodeType": "ExpressionStatement",
                  "src": "3061:50:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1577,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "3130:25:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1573,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1421,
                            "src": "3131:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1576,
                          "indexExpression": {
                            "expression": {
                              "id": 1574,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3144:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3144:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3131:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d73672e73656e6465722069732072657374726963746564",
                        "id": 1578,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3157:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        },
                        "value": "msg.sender is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        }
                      ],
                      "id": 1572,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3122:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3122:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1580,
                  "nodeType": "ExpressionStatement",
                  "src": "3122:62:5"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1581,
                      "name": "_mintToFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1670,
                      "src": "3195:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3195:20:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1583,
                  "nodeType": "ExpressionStatement",
                  "src": "3195:20:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1585,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1554,
                        "src": "3232:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1586,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1556,
                        "src": "3238:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1584,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46357,
                      "src": "3226:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 1587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3226:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1588,
                  "nodeType": "ExpressionStatement",
                  "src": "3226:19:5"
                }
              ]
            },
            "baseFunctions": [
              2034
            ],
            "documentation": {
              "id": 1552,
              "nodeType": "StructuredDocumentation",
              "src": "2787:170:5",
              "text": "@notice External burn function\n @dev burn function can only be called externally by the controller\n @param from address\n @param amount uint256"
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1560,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1559,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45783,
                  "src": "3025:13:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3025:13:5"
              },
              {
                "id": 1562,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1561,
                  "name": "onlyMinter",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1445,
                  "src": "3039:10:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "3039:10:5"
              }
            ],
            "name": "burn",
            "nameLocation": "2972:4:5",
            "overrides": {
              "id": 1558,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3016:8:5"
            },
            "parameters": {
              "id": 1557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1554,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2985:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "2977:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1553,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2977:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1556,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2999:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1590,
                  "src": "2991:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1555,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2991:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2976:30:5"
            },
            "returnParameters": {
              "id": 1563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3050:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1670,
            "nodeType": "FunctionDefinition",
            "src": "3261:754:5",
            "nodes": [],
            "body": {
              "id": 1669,
              "nodeType": "Block",
              "src": "3300:715:5",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    1594
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1594,
                      "mutability": "mutable",
                      "name": "_days",
                      "nameLocation": "3360:5:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 1669,
                      "src": "3352:13:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1593,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3352:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1602,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1595,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3369:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 1596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "3369:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1597,
                            "name": "feeTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1407,
                            "src": "3387:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3369:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1599,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3368:32:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1600,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3403:6:5",
                      "subdenomination": "days",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_86400_by_1",
                        "typeString": "int_const 86400"
                      },
                      "value": "1"
                    },
                    "src": "3368:41:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3352:57:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1603,
                      "name": "_days",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1594,
                      "src": "3426:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 1604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3435:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3426:10:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1668,
                  "nodeType": "IfStatement",
                  "src": "3422:586:5",
                  "trueBody": {
                    "id": 1667,
                    "nodeType": "Block",
                    "src": "3438:570:5",
                    "statements": [
                      {
                        "assignments": [
                          1607
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1607,
                            "mutability": "mutable",
                            "name": "initial",
                            "nameLocation": "3461:7:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1667,
                            "src": "3453:15:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1606,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3453:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1610,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1608,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45966,
                            "src": "3471:11:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 1609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3471:13:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3453:31:5"
                      },
                      {
                        "assignments": [
                          1612
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1612,
                            "mutability": "mutable",
                            "name": "supply",
                            "nameLocation": "3507:6:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1667,
                            "src": "3499:14:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1611,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3499:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1614,
                        "initialValue": {
                          "id": 1613,
                          "name": "initial",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1607,
                          "src": "3516:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3499:24:5"
                      },
                      {
                        "assignments": [
                          1616
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1616,
                            "mutability": "mutable",
                            "name": "_feeRate",
                            "nameLocation": "3546:8:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1667,
                            "src": "3538:16:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1615,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3538:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1618,
                        "initialValue": {
                          "id": 1617,
                          "name": "feeRatePerDayScaled",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1405,
                          "src": "3557:19:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3538:38:5"
                      },
                      {
                        "body": {
                          "id": 1639,
                          "nodeType": "Block",
                          "src": "3622:149:5",
                          "statements": [
                            {
                              "expression": {
                                "id": 1633,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1625,
                                  "name": "supply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1612,
                                  "src": "3641:6:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1631,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "components": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 1628,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 1626,
                                              "name": "supply",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1612,
                                              "src": "3653:6:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "id": 1627,
                                              "name": "_feeRate",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 1616,
                                              "src": "3662:8:5",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "src": "3653:17:5",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "id": 1629,
                                        "isConstant": false,
                                        "isInlineArray": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "TupleExpression",
                                        "src": "3652:19:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "/",
                                      "rightExpression": {
                                        "id": 1630,
                                        "name": "SCALAR",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1403,
                                        "src": "3674:6:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3652:28:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 1632,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "3651:30:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3641:40:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1634,
                              "nodeType": "ExpressionStatement",
                              "src": "3641:40:5"
                            },
                            {
                              "id": 1638,
                              "nodeType": "UncheckedBlock",
                              "src": "3700:56:5",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 1636,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "3733:3:5",
                                    "subExpression": {
                                      "id": 1635,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1620,
                                      "src": "3735:1:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 1637,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3733:3:5"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1624,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1622,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1620,
                            "src": "3609:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 1623,
                            "name": "_days",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1594,
                            "src": "3613:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3609:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1640,
                        "initializationExpression": {
                          "assignments": [
                            1620
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 1620,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3606:1:5",
                              "nodeType": "VariableDeclaration",
                              "scope": 1640,
                              "src": "3598:9:5",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 1619,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "3598:7:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 1621,
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3598:9:5"
                        },
                        "nodeType": "ForStatement",
                        "src": "3593:178:5"
                      },
                      {
                        "assignments": [
                          1642
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1642,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "3793:6:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 1667,
                            "src": "3785:14:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1641,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "3785:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1646,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1643,
                            "name": "supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1612,
                            "src": "3802:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 1644,
                            "name": "initial",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1607,
                            "src": "3811:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3802:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3785:33:5"
                      },
                      {
                        "expression": {
                          "id": 1651,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1647,
                            "name": "feeTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1407,
                            "src": "3833:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1650,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "31",
                              "id": 1648,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3849:6:5",
                              "subdenomination": "days",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_86400_by_1",
                                "typeString": "int_const 86400"
                              },
                              "value": "1"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 1649,
                              "name": "_days",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1594,
                              "src": "3858:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3849:14:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3833:30:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1652,
                        "nodeType": "ExpressionStatement",
                        "src": "3833:30:5"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1654,
                              "name": "feeReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1409,
                              "src": "3884:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1655,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1642,
                              "src": "3897:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1653,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46285,
                            "src": "3878:5:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1656,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3878:26:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1657,
                        "nodeType": "ExpressionStatement",
                        "src": "3878:26:5"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1659,
                              "name": "feeReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1409,
                              "src": "3944:11:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 1660,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "3957:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 1661,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "3957:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1662,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45966,
                                "src": "3974:11:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 1663,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3974:13:5",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 1664,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1642,
                              "src": "3989:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1658,
                            "name": "MintFeeToReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1998,
                            "src": "3926:17:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256)"
                            }
                          },
                          "id": 1665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3926:70:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1666,
                        "nodeType": "EmitStatement",
                        "src": "3921:75:5"
                      }
                    ]
                  }
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mintToFeeReceiver",
            "nameLocation": "3270:18:5",
            "parameters": {
              "id": 1591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3288:2:5"
            },
            "returnParameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3300:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 1681,
            "nodeType": "FunctionDefinition",
            "src": "4245:96:5",
            "nodes": [],
            "body": {
              "id": 1680,
              "nodeType": "Block",
              "src": "4302:39:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1677,
                      "name": "_mintToFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1670,
                      "src": "4313:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4313:20:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1679,
                  "nodeType": "ExpressionStatement",
                  "src": "4313:20:5"
                }
              ]
            },
            "baseFunctions": [
              2038
            ],
            "documentation": {
              "id": 1671,
              "nodeType": "StructuredDocumentation",
              "src": "4023:216:5",
              "text": "@notice Expands supply and mints fees to fee reciever\n @dev Can only be called by the owner externally,\n @dev _mintToFeeReciver is the internal function and is called after each supply/rate change"
            },
            "functionSelector": "f734e22a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1675,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1674,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45479,
                  "src": "4292:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4292:9:5"
              }
            ],
            "name": "mintToFeeReceiver",
            "nameLocation": "4254:17:5",
            "overrides": {
              "id": 1673,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4283:8:5"
            },
            "parameters": {
              "id": 1672,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4271:2:5"
            },
            "returnParameters": {
              "id": 1676,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4302:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1708,
            "nodeType": "FunctionDefinition",
            "src": "4461:223:5",
            "nodes": [],
            "body": {
              "id": 1707,
              "nodeType": "Block",
              "src": "4539:145:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1691,
                          "name": "_methodologist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1684,
                          "src": "4558:14:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1694,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4584:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4576:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1692,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4576:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4576:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4558:28:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1690,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4550:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4550:37:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1698,
                  "nodeType": "ExpressionStatement",
                  "src": "4550:37:5"
                },
                {
                  "expression": {
                    "id": 1701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1699,
                      "name": "methodologist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1411,
                      "src": "4598:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1700,
                      "name": "_methodologist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1684,
                      "src": "4614:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4598:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1702,
                  "nodeType": "ExpressionStatement",
                  "src": "4598:30:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1704,
                        "name": "_methodologist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1684,
                        "src": "4661:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1703,
                      "name": "MethodologistSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1976,
                      "src": "4644:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4644:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1706,
                  "nodeType": "EmitStatement",
                  "src": "4639:37:5"
                }
              ]
            },
            "baseFunctions": [
              2044
            ],
            "documentation": {
              "id": 1682,
              "nodeType": "StructuredDocumentation",
              "src": "4355:100:5",
              "text": "@notice Only owner function for setting the methodologist\n @param _methodologist address"
            },
            "functionSelector": "660db484",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1688,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1687,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45479,
                  "src": "4529:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4529:9:5"
              }
            ],
            "name": "setMethodologist",
            "nameLocation": "4470:16:5",
            "overrides": {
              "id": 1686,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4520:8:5"
            },
            "parameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1684,
                  "mutability": "mutable",
                  "name": "_methodologist",
                  "nameLocation": "4495:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1708,
                  "src": "4487:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1683,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4487:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4486:24:5"
            },
            "returnParameters": {
              "id": 1689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4539:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1726,
            "nodeType": "FunctionDefinition",
            "src": "4843:177:5",
            "nodes": [],
            "body": {
              "id": 1725,
              "nodeType": "Block",
              "src": "4931:89:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1717,
                      "name": "methodology",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1415,
                      "src": "4942:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1718,
                      "name": "_methodology",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1711,
                      "src": "4956:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4942:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 1720,
                  "nodeType": "ExpressionStatement",
                  "src": "4942:26:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1722,
                        "name": "_methodology",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1711,
                        "src": "4999:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 1721,
                      "name": "MethodologySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1980,
                      "src": "4984:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 1723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4984:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1724,
                  "nodeType": "EmitStatement",
                  "src": "4979:33:5"
                }
              ]
            },
            "baseFunctions": [
              2050
            ],
            "documentation": {
              "id": 1709,
              "nodeType": "StructuredDocumentation",
              "src": "4692:145:5",
              "text": "@notice Callable only by the methodoligst to store on chain data about the underlying weight of the token\n @param _methodology string"
            },
            "functionSelector": "91fe1b92",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1715,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1714,
                  "name": "onlyMethodologist",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1433,
                  "src": "4913:17:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "4913:17:5"
              }
            ],
            "name": "setMethodology",
            "nameLocation": "4852:14:5",
            "overrides": {
              "id": 1713,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4904:8:5"
            },
            "parameters": {
              "id": 1712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1711,
                  "mutability": "mutable",
                  "name": "_methodology",
                  "nameLocation": "4881:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1726,
                  "src": "4867:26:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1710,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4867:6:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4866:28:5"
            },
            "returnParameters": {
              "id": 1716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4931:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1747,
            "nodeType": "FunctionDefinition",
            "src": "5221:218:5",
            "nodes": [],
            "body": {
              "id": 1746,
              "nodeType": "Block",
              "src": "5299:140:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1735,
                      "name": "_mintToFeeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1670,
                      "src": "5310:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5310:20:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1737,
                  "nodeType": "ExpressionStatement",
                  "src": "5310:20:5"
                },
                {
                  "expression": {
                    "id": 1740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1738,
                      "name": "feeRatePerDayScaled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1405,
                      "src": "5341:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1739,
                      "name": "_feeRatePerDayScaled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1729,
                      "src": "5363:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5341:42:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1741,
                  "nodeType": "ExpressionStatement",
                  "src": "5341:42:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1743,
                        "name": "_feeRatePerDayScaled",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1729,
                        "src": "5410:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1742,
                      "name": "FeeRateSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1972,
                      "src": "5399:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1744,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5399:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1745,
                  "nodeType": "EmitStatement",
                  "src": "5394:37:5"
                }
              ]
            },
            "baseFunctions": [
              2056
            ],
            "documentation": {
              "id": 1727,
              "nodeType": "StructuredDocumentation",
              "src": "5028:187:5",
              "text": "@notice Ownable function to set the fee rate\n @dev Given the annual fee rate this function sets and calculates the rate per second\n @param _feeRatePerDayScaled uint256"
            },
            "functionSelector": "45596e2e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1733,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1732,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45479,
                  "src": "5289:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "5289:9:5"
              }
            ],
            "name": "setFeeRate",
            "nameLocation": "5230:10:5",
            "overrides": {
              "id": 1731,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5280:8:5"
            },
            "parameters": {
              "id": 1730,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1729,
                  "mutability": "mutable",
                  "name": "_feeRatePerDayScaled",
                  "nameLocation": "5249:20:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1747,
                  "src": "5241:28:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1728,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5241:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5240:30:5"
            },
            "returnParameters": {
              "id": 1734,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5299:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1774,
            "nodeType": "FunctionDefinition",
            "src": "5538:209:5",
            "nodes": [],
            "body": {
              "id": 1773,
              "nodeType": "Block",
              "src": "5612:135:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1757,
                          "name": "_feeReceiver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1750,
                          "src": "5631:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1760,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5655:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1759,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5647:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1758,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5647:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5647:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5631:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1756,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5623:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5623:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1764,
                  "nodeType": "ExpressionStatement",
                  "src": "5623:35:5"
                },
                {
                  "expression": {
                    "id": 1767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1765,
                      "name": "feeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1409,
                      "src": "5669:11:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1766,
                      "name": "_feeReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1750,
                      "src": "5683:12:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5669:26:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1768,
                  "nodeType": "ExpressionStatement",
                  "src": "5669:26:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1770,
                        "name": "_feeReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1750,
                        "src": "5726:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1769,
                      "name": "FeeReceiverSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1968,
                      "src": "5711:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5711:28:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1772,
                  "nodeType": "EmitStatement",
                  "src": "5706:33:5"
                }
              ]
            },
            "baseFunctions": [
              2062
            ],
            "documentation": {
              "id": 1748,
              "nodeType": "StructuredDocumentation",
              "src": "5447:85:5",
              "text": "@notice Ownable function to set the receiver\n @param _feeReceiver address"
            },
            "functionSelector": "efdcd974",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1754,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1753,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45479,
                  "src": "5602:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "5602:9:5"
              }
            ],
            "name": "setFeeReceiver",
            "nameLocation": "5547:14:5",
            "overrides": {
              "id": 1752,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5593:8:5"
            },
            "parameters": {
              "id": 1751,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1750,
                  "mutability": "mutable",
                  "name": "_feeReceiver",
                  "nameLocation": "5570:12:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1774,
                  "src": "5562:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1749,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5562:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5561:22:5"
            },
            "returnParameters": {
              "id": 1755,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5612:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1801,
            "nodeType": "FunctionDefinition",
            "src": "5863:174:5",
            "nodes": [],
            "body": {
              "id": 1800,
              "nodeType": "Block",
              "src": "5927:110:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1784,
                          "name": "_minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1777,
                          "src": "5946:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5965:1:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1786,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5957:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1785,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5957:7:5",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1788,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5957:10:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5946:21:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1783,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5938:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5938:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1791,
                  "nodeType": "ExpressionStatement",
                  "src": "5938:30:5"
                },
                {
                  "expression": {
                    "id": 1794,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1792,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1413,
                      "src": "5979:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1793,
                      "name": "_minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1777,
                      "src": "5988:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "5979:16:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1795,
                  "nodeType": "ExpressionStatement",
                  "src": "5979:16:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1797,
                        "name": "_minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1777,
                        "src": "6021:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1796,
                      "name": "MinterSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1984,
                      "src": "6011:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 1798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6011:18:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1799,
                  "nodeType": "EmitStatement",
                  "src": "6006:23:5"
                }
              ]
            },
            "baseFunctions": [
              2068
            ],
            "documentation": {
              "id": 1775,
              "nodeType": "StructuredDocumentation",
              "src": "5755:102:5",
              "text": "@notice Ownable function to set the contract that controls minting\n @param _minter address"
            },
            "functionSelector": "fca3b5aa",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1781,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1780,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45479,
                  "src": "5917:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "5917:9:5"
              }
            ],
            "name": "setMinter",
            "nameLocation": "5872:9:5",
            "overrides": {
              "id": 1779,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5908:8:5"
            },
            "parameters": {
              "id": 1778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1777,
                  "mutability": "mutable",
                  "name": "_minter",
                  "nameLocation": "5890:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1801,
                  "src": "5882:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5882:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5881:17:5"
            },
            "returnParameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5927:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1819,
            "nodeType": "FunctionDefinition",
            "src": "6175:175:5",
            "nodes": [],
            "body": {
              "id": 1818,
              "nodeType": "Block",
              "src": "6253:97:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1810,
                      "name": "supplyCeiling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1417,
                      "src": "6264:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1811,
                      "name": "_supplyCeiling",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1804,
                      "src": "6280:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6264:30:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1813,
                  "nodeType": "ExpressionStatement",
                  "src": "6264:30:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1815,
                        "name": "_supplyCeiling",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1804,
                        "src": "6327:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1814,
                      "name": "SupplyCeilingSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1988,
                      "src": "6310:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6310:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1817,
                  "nodeType": "EmitStatement",
                  "src": "6305:37:5"
                }
              ]
            },
            "baseFunctions": [
              2074
            ],
            "documentation": {
              "id": 1802,
              "nodeType": "StructuredDocumentation",
              "src": "6045:124:5",
              "text": "@notice Ownable function to set the limit at which the total supply cannot exceed\n @param _supplyCeiling uint256"
            },
            "functionSelector": "6e01a686",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1808,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1807,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45479,
                  "src": "6243:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "6243:9:5"
              }
            ],
            "name": "setSupplyCeiling",
            "nameLocation": "6184:16:5",
            "overrides": {
              "id": 1806,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6234:8:5"
            },
            "parameters": {
              "id": 1805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1804,
                  "mutability": "mutable",
                  "name": "_supplyCeiling",
                  "nameLocation": "6209:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1819,
                  "src": "6201:22:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1803,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6201:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6200:24:5"
            },
            "returnParameters": {
              "id": 1809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6253:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1829,
            "nodeType": "FunctionDefinition",
            "src": "6364:72:5",
            "nodes": [],
            "body": {
              "id": 1828,
              "nodeType": "Block",
              "src": "6409:27:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1825,
                      "name": "_pause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45839,
                      "src": "6420:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6420:8:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1827,
                  "nodeType": "ExpressionStatement",
                  "src": "6420:8:5"
                }
              ]
            },
            "baseFunctions": [
              2078
            ],
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1823,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1822,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45479,
                  "src": "6399:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "6399:9:5"
              }
            ],
            "name": "pause",
            "nameLocation": "6373:5:5",
            "overrides": {
              "id": 1821,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6390:8:5"
            },
            "parameters": {
              "id": 1820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6378:2:5"
            },
            "returnParameters": {
              "id": 1824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6409:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1839,
            "nodeType": "FunctionDefinition",
            "src": "6444:76:5",
            "nodes": [],
            "body": {
              "id": 1838,
              "nodeType": "Block",
              "src": "6491:29:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 1835,
                      "name": "_unpause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45855,
                      "src": "6502:8:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 1836,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6502:10:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1837,
                  "nodeType": "ExpressionStatement",
                  "src": "6502:10:5"
                }
              ]
            },
            "baseFunctions": [
              2081
            ],
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1833,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1832,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45479,
                  "src": "6481:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "6481:9:5"
              }
            ],
            "name": "unpause",
            "nameLocation": "6453:7:5",
            "overrides": {
              "id": 1831,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6472:8:5"
            },
            "parameters": {
              "id": 1830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6460:2:5"
            },
            "returnParameters": {
              "id": 1834,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6491:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1865,
            "nodeType": "FunctionDefinition",
            "src": "6670:182:5",
            "nodes": [],
            "body": {
              "id": 1864,
              "nodeType": "Block",
              "src": "6738:114:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 1855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1848,
                        "name": "isRestricted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1421,
                        "src": "6749:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 1850,
                      "indexExpression": {
                        "id": 1849,
                        "name": "who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1842,
                        "src": "6762:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6749:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "6769:18:5",
                      "subExpression": {
                        "baseExpression": {
                          "id": 1851,
                          "name": "isRestricted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1421,
                          "src": "6770:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1853,
                        "indexExpression": {
                          "id": 1852,
                          "name": "who",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1842,
                          "src": "6783:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6770:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6749:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1856,
                  "nodeType": "ExpressionStatement",
                  "src": "6749:38:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1858,
                        "name": "who",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1842,
                        "src": "6821:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "baseExpression": {
                          "id": 1859,
                          "name": "isRestricted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1421,
                          "src": "6826:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 1861,
                        "indexExpression": {
                          "id": 1860,
                          "name": "who",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1842,
                          "src": "6839:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "6826:17:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1857,
                      "name": "ToggledRestricted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2004,
                      "src": "6803:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 1862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6803:41:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1863,
                  "nodeType": "EmitStatement",
                  "src": "6798:46:5"
                }
              ]
            },
            "baseFunctions": [
              2087
            ],
            "documentation": {
              "id": 1840,
              "nodeType": "StructuredDocumentation",
              "src": "6534:130:5",
              "text": "@notice Compliance feature to blacklist bad actors\n @dev Negates current restriction state\n @param who address"
            },
            "functionSelector": "aaa4a184",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1846,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1845,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45479,
                  "src": "6728:9:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "6728:9:5"
              }
            ],
            "name": "toggleRestriction",
            "nameLocation": "6679:17:5",
            "overrides": {
              "id": 1844,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6719:8:5"
            },
            "parameters": {
              "id": 1843,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1842,
                  "mutability": "mutable",
                  "name": "who",
                  "nameLocation": "6705:3:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1865,
                  "src": "6697:11:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1841,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6697:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6696:13:5"
            },
            "returnParameters": {
              "id": 1847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6738:0:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 1905,
            "nodeType": "FunctionDefinition",
            "src": "7011:297:5",
            "nodes": [],
            "body": {
              "id": 1904,
              "nodeType": "Block",
              "src": "7102:206:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7121:25:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1879,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1421,
                            "src": "7122:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1882,
                          "indexExpression": {
                            "expression": {
                              "id": 1880,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7135:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1881,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7135:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7122:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d73672e73656e6465722069732072657374726963746564",
                        "id": 1884,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7148:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        },
                        "value": "msg.sender is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        }
                      ],
                      "id": 1878,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7113:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7113:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1886,
                  "nodeType": "ExpressionStatement",
                  "src": "7113:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7194:17:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1888,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1421,
                            "src": "7195:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1890,
                          "indexExpression": {
                            "id": 1889,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1868,
                            "src": "7208:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7195:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f2069732072657374726963746564",
                        "id": 1892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7213:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20fb04da0a3c46b67f46e54fe5e85e6a641db1764c2d05a4e674b989b4b4d7d6",
                          "typeString": "literal_string \"to is restricted\""
                        },
                        "value": "to is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20fb04da0a3c46b67f46e54fe5e85e6a641db1764c2d05a4e674b989b4b4d7d6",
                          "typeString": "literal_string \"to is restricted\""
                        }
                      ],
                      "id": 1887,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7186:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7186:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1894,
                  "nodeType": "ExpressionStatement",
                  "src": "7186:46:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1896,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7255:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7255:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1898,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1868,
                        "src": "7267:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1899,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1870,
                        "src": "7271:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1895,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46228,
                      "src": "7245:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7245:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1901,
                  "nodeType": "ExpressionStatement",
                  "src": "7245:33:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7296:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1877,
                  "id": 1903,
                  "nodeType": "Return",
                  "src": "7289:11:5"
                }
              ]
            },
            "baseFunctions": [
              46005
            ],
            "documentation": {
              "id": 1866,
              "nodeType": "StructuredDocumentation",
              "src": "6866:139:5",
              "text": "@notice Overriden ERC20 transfer to include restriction\n @param to address\n @param amount uint256\n @return bool"
            },
            "functionSelector": "a9059cbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1874,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1873,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45783,
                  "src": "7073:13:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "7073:13:5"
              }
            ],
            "name": "transfer",
            "nameLocation": "7020:8:5",
            "overrides": {
              "id": 1872,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7064:8:5"
            },
            "parameters": {
              "id": 1871,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1868,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7037:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1905,
                  "src": "7029:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7029:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1870,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7049:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1905,
                  "src": "7041:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7041:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7028:28:5"
            },
            "returnParameters": {
              "id": 1877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1876,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1905,
                  "src": "7096:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1875,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7096:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7095:6:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 1961,
            "nodeType": "FunctionDefinition",
            "src": "7494:456:5",
            "nodes": [],
            "body": {
              "id": 1960,
              "nodeType": "Block",
              "src": "7637:313:5",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7656:25:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1921,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1421,
                            "src": "7657:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1924,
                          "indexExpression": {
                            "expression": {
                              "id": 1922,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "7670:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1923,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "7670:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7657:24:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d73672e73656e6465722069732072657374726963746564",
                        "id": 1926,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7683:26:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        },
                        "value": "msg.sender is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2d0ca79c18e0779eddc84d21782a6d3f346897fbcb203ef96c48073cfedd5a71",
                          "typeString": "literal_string \"msg.sender is restricted\""
                        }
                      ],
                      "id": 1920,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7648:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1927,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7648:62:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1928,
                  "nodeType": "ExpressionStatement",
                  "src": "7648:62:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7729:17:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1930,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1421,
                            "src": "7730:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1932,
                          "indexExpression": {
                            "id": 1931,
                            "name": "to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1910,
                            "src": "7743:2:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7730:16:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "746f2069732072657374726963746564",
                        "id": 1934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7748:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_20fb04da0a3c46b67f46e54fe5e85e6a641db1764c2d05a4e674b989b4b4d7d6",
                          "typeString": "literal_string \"to is restricted\""
                        },
                        "value": "to is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_20fb04da0a3c46b67f46e54fe5e85e6a641db1764c2d05a4e674b989b4b4d7d6",
                          "typeString": "literal_string \"to is restricted\""
                        }
                      ],
                      "id": 1929,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7721:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1935,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7721:46:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1936,
                  "nodeType": "ExpressionStatement",
                  "src": "7721:46:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1941,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "7786:19:5",
                        "subExpression": {
                          "baseExpression": {
                            "id": 1938,
                            "name": "isRestricted",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1421,
                            "src": "7787:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 1940,
                          "indexExpression": {
                            "id": 1939,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1908,
                            "src": "7800:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "7787:18:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66726f6d2069732072657374726963746564",
                        "id": 1942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7807:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7c94ad03512178aaaa18bb65554bce6f67cf0ed71115cfc1109bd05ddaff6a3",
                          "typeString": "literal_string \"from is restricted\""
                        },
                        "value": "from is restricted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7c94ad03512178aaaa18bb65554bce6f67cf0ed71115cfc1109bd05ddaff6a3",
                          "typeString": "literal_string \"from is restricted\""
                        }
                      ],
                      "id": 1937,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7778:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7778:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1944,
                  "nodeType": "ExpressionStatement",
                  "src": "7778:50:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1946,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1908,
                        "src": "7857:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1947,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7863:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7863:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1949,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "7875:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1945,
                      "name": "_spendAllowance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46445,
                      "src": "7841:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7841:41:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1951,
                  "nodeType": "ExpressionStatement",
                  "src": "7841:41:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1953,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1908,
                        "src": "7903:4:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1954,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1910,
                        "src": "7909:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1955,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1912,
                        "src": "7913:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1952,
                      "name": "_transfer",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46228,
                      "src": "7893:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 1956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7893:27:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1957,
                  "nodeType": "ExpressionStatement",
                  "src": "7893:27:5"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 1958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "7938:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 1919,
                  "id": 1959,
                  "nodeType": "Return",
                  "src": "7931:11:5"
                }
              ]
            },
            "baseFunctions": [
              46081
            ],
            "documentation": {
              "id": 1906,
              "nodeType": "StructuredDocumentation",
              "src": "7316:172:5",
              "text": "@notice Overriden ERC20 transferFrom to include restriction\n @param from address\n @param to address\n @param amount uint256\n @return bool"
            },
            "functionSelector": "23b872dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1916,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1915,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45783,
                  "src": "7608:13:5"
                },
                "nodeType": "ModifierInvocation",
                "src": "7608:13:5"
              }
            ],
            "name": "transferFrom",
            "nameLocation": "7503:12:5",
            "overrides": {
              "id": 1914,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7599:8:5"
            },
            "parameters": {
              "id": 1913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1908,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "7534:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1961,
                  "src": "7526:12:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1907,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7526:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1910,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7557:2:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1961,
                  "src": "7549:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1909,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7549:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1912,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7578:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 1961,
                  "src": "7570:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1911,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7570:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7515:76:5"
            },
            "returnParameters": {
              "id": 1919,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1918,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1961,
                  "src": "7631:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1917,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7631:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7630:6:5"
            },
            "scope": 1962,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1391,
              "name": "ContextUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46948,
              "src": "519:18:5"
            },
            "id": 1392,
            "nodeType": "InheritanceSpecifier",
            "src": "519:18:5"
          },
          {
            "baseName": {
              "id": 1393,
              "name": "ERC20Upgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46473,
              "src": "544:16:5"
            },
            "id": 1394,
            "nodeType": "InheritanceSpecifier",
            "src": "544:16:5"
          },
          {
            "baseName": {
              "id": 1395,
              "name": "ProposableOwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1383,
              "src": "567:28:5"
            },
            "id": 1396,
            "nodeType": "InheritanceSpecifier",
            "src": "567:28:5"
          },
          {
            "baseName": {
              "id": 1397,
              "name": "PausableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45861,
              "src": "602:19:5"
            },
            "id": 1398,
            "nodeType": "InheritanceSpecifier",
            "src": "602:19:5"
          },
          {
            "baseName": {
              "id": 1399,
              "name": "TokenInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2088,
              "src": "628:14:5"
            },
            "id": 1400,
            "nodeType": "InheritanceSpecifier",
            "src": "628:14:5"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1390,
          "nodeType": "StructuredDocumentation",
          "src": "311:180:5",
          "text": "@title Index Token\n @author NEX Labs Protocol\n @notice The main token contract for Index Token (NEX Labs Protocol)\n @dev This contract uses an upgradeable pattern"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          1962,
          2088,
          45861,
          1383,
          45565,
          46473,
          46576,
          46551,
          46948,
          45734
        ],
        "name": "IndexToken",
        "nameLocation": "500:10:5",
        "scope": 1963,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 5
}