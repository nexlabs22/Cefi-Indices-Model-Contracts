{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bool",
          "name": "pause",
          "type": "bool"
        }
      ],
      "name": "FactoryPause",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract FactoryInterface",
          "name": "factory",
          "type": "address"
        }
      ],
      "name": "FactorySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract MembersInterface",
          "name": "members",
          "type": "address"
        }
      ],
      "name": "MembersSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "factory",
      "outputs": [
        {
          "internalType": "contract FactoryInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "pause",
          "type": "bool"
        }
      ],
      "name": "factoryPause",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCustodianWallet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isIssuer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "isMerchant",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "members",
      "outputs": [
        {
          "internalType": "contract MembersInterface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_proposedOwner",
          "type": "address"
        }
      ],
      "name": "proposeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "proposedOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_factory",
          "type": "address"
        }
      ],
      "name": "setFactory",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_members",
          "type": "address"
        }
      ],
      "name": "setMembers",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IndexToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610cd2806100206000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c8063b5ed298a116100a2578063d153b60c11610071578063d153b60c1461022e578063d7bd6a8114610241578063f2fde38b14610249578063f3796bdc1461025c578063fc0c546a1461026f57600080fd5b8063b5ed298a146101e2578063bdd4d18d146101f5578063c45a015514610208578063c4d66de81461021b57600080fd5b80635bb47808116100e95780635bb478081461018e578063715018a6146101a1578063877b9a67146101ab5780638da5cb5b146101be5780639dc29fac146101cf57600080fd5b80631a2f71671461011b57806321df0da71461014357806340c10f191461016857806353c3e3081461017b575b600080fd5b61012e610129366004610aea565b610282565b60405190151581526020015b60405180910390f35b6098546001600160a01b03165b6040516001600160a01b03909116815260200161013a565b61012e610176366004610b2b565b610307565b61012e610189366004610b57565b6103f8565b61012e61019c366004610aea565b61051b565b6101a9610574565b005b61012e6101b9366004610aea565b6105c4565b6033546001600160a01b0316610150565b61012e6101dd366004610b2b565b6105f7565b6101a96101f0366004610aea565b61065d565b609954610150906001600160a01b031681565b609a54610150906001600160a01b031681565b6101a9610229366004610aea565b6106ad565b606554610150906001600160a01b031681565b6101506107da565b6101a9610257366004610aea565b61085c565b61012e61026a366004610aea565b610984565b609854610150906001600160a01b031681565b609954604051631a2f716760e01b81526001600160a01b0383811660048301526000921690631a2f7167906024015b60206040518083038186803b1580156102c957600080fd5b505afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103019190610b74565b92915050565b609a546000906001600160a01b0316331461033d5760405162461bcd60e51b815260040161033490610b91565b60405180910390fd5b6001600160a01b0383166103885760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420746f206164647265737360701b6044820152606401610334565b6098546040516340c10f1960e01b81526001600160a01b03858116600483015260248201859052909116906340c10f19906044015b600060405180830381600087803b1580156103d757600080fd5b505af11580156103eb573d6000803e3d6000fd5b5060019695505050505050565b60006104026109dd565b811561047557609a60009054906101000a90046001600160a01b03166001600160a01b0316638456cb596040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561045857600080fd5b505af115801561046c573d6000803e3d6000fd5b505050506104de565b609a60009054906101000a90046001600160a01b03166001600160a01b0316633f4ba83a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104c557600080fd5b505af11580156104d9573d6000803e3d6000fd5b505050505b60405182151581527f65b1d18992f57a377d0193e70dde8c9b5ecccaeac65d84cfc0d457e98926e6359060200160405180910390a1506001919050565b60006105256109dd565b609a80546001600160a01b0319166001600160a01b0384169081179091556040517f1edf3afd4ac789736e00d216cd88be164ddcef26a6eedcc30cdb0cb62f3741b190600090a2506001919050565b61057c6109dd565b60405162461bcd60e51b815260206004820181905260248201527f72656e6f756e63696e67206f776e65727368697020697320626c6f636b65642e6044820152606401610334565b60995460405163877b9a6760e01b81526001600160a01b038381166004830152600092169063877b9a67906024016102b1565b609a546000906001600160a01b031633146106245760405162461bcd60e51b815260040161033490610b91565b609854604051632770a7eb60e21b81526001600160a01b0385811660048301526024820185905290911690639dc29fac906044016103bd565b6106656109dd565b6001600160a01b03811661068b5760405162461bcd60e51b815260040161033490610bde565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16158080156106cd5750600054600160ff909116105b806106e75750303b1580156106e7575060005460ff166001145b61074a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610334565b6000805460ff19166001179055801561076d576000805461ff0019166101001790555b609880546001600160a01b0319166001600160a01b038416179055610790610a39565b80156107d6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6099546040805163d7bd6a8160e01b815290516000926001600160a01b03169163d7bd6a81916004808301926020929190829003018186803b15801561081f57600080fd5b505afa158015610833573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108579190610b0e565b905090565b6001600160a01b0381166108825760405162461bcd60e51b815260040161033490610bde565b6065546001600160a01b038281169116146108fa5760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b6064820152608401610334565b6001600160a01b03811633146109785760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e65720000000000006064820152608401610334565b61098181610a68565b50565b600061098e6109dd565b609980546001600160a01b0319166001600160a01b0384169081179091556040517fc1ab8227dcc82b3165b89762b5698f88dd96b65581d137b10770a84b27df6a9090600090a2506001919050565b6033546001600160a01b03163314610a375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610334565b565b600054610100900460ff16610a605760405162461bcd60e51b815260040161033490610c2e565b610a37610aba565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ae15760405162461bcd60e51b815260040161033490610c2e565b610a3733610a68565b600060208284031215610afc57600080fd5b8135610b0781610c79565b9392505050565b600060208284031215610b2057600080fd5b8151610b0781610c79565b60008060408385031215610b3e57600080fd5b8235610b4981610c79565b946020939093013593505050565b600060208284031215610b6957600080fd5b8135610b0781610c8e565b600060208284031215610b8657600080fd5b8151610b0781610c8e565b6020808252602d908201527f73656e646572206e6f7420617574686f72697a656420666f72206d696e74696e60408201526c339037b910313ab93734b7339760991b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b038116811461098157600080fd5b801515811461098157600080fdfea26469706673582212205e04093c38c6f7e9b3fc36bf37b5e0bff4e5f491feac033953f637dfd13eeccc64736f6c63430008070033",
    "sourceMap": "504:3172:0:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101165760003560e01c8063b5ed298a116100a2578063d153b60c11610071578063d153b60c1461022e578063d7bd6a8114610241578063f2fde38b14610249578063f3796bdc1461025c578063fc0c546a1461026f57600080fd5b8063b5ed298a146101e2578063bdd4d18d146101f5578063c45a015514610208578063c4d66de81461021b57600080fd5b80635bb47808116100e95780635bb478081461018e578063715018a6146101a1578063877b9a67146101ab5780638da5cb5b146101be5780639dc29fac146101cf57600080fd5b80631a2f71671461011b57806321df0da71461014357806340c10f191461016857806353c3e3081461017b575b600080fd5b61012e610129366004610aea565b610282565b60405190151581526020015b60405180910390f35b6098546001600160a01b03165b6040516001600160a01b03909116815260200161013a565b61012e610176366004610b2b565b610307565b61012e610189366004610b57565b6103f8565b61012e61019c366004610aea565b61051b565b6101a9610574565b005b61012e6101b9366004610aea565b6105c4565b6033546001600160a01b0316610150565b61012e6101dd366004610b2b565b6105f7565b6101a96101f0366004610aea565b61065d565b609954610150906001600160a01b031681565b609a54610150906001600160a01b031681565b6101a9610229366004610aea565b6106ad565b606554610150906001600160a01b031681565b6101506107da565b6101a9610257366004610aea565b61085c565b61012e61026a366004610aea565b610984565b609854610150906001600160a01b031681565b609954604051631a2f716760e01b81526001600160a01b0383811660048301526000921690631a2f7167906024015b60206040518083038186803b1580156102c957600080fd5b505afa1580156102dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103019190610b74565b92915050565b609a546000906001600160a01b0316331461033d5760405162461bcd60e51b815260040161033490610b91565b60405180910390fd5b6001600160a01b0383166103885760405162461bcd60e51b8152602060048201526012602482015271696e76616c696420746f206164647265737360701b6044820152606401610334565b6098546040516340c10f1960e01b81526001600160a01b03858116600483015260248201859052909116906340c10f19906044015b600060405180830381600087803b1580156103d757600080fd5b505af11580156103eb573d6000803e3d6000fd5b5060019695505050505050565b60006104026109dd565b811561047557609a60009054906101000a90046001600160a01b03166001600160a01b0316638456cb596040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561045857600080fd5b505af115801561046c573d6000803e3d6000fd5b505050506104de565b609a60009054906101000a90046001600160a01b03166001600160a01b0316633f4ba83a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156104c557600080fd5b505af11580156104d9573d6000803e3d6000fd5b505050505b60405182151581527f65b1d18992f57a377d0193e70dde8c9b5ecccaeac65d84cfc0d457e98926e6359060200160405180910390a1506001919050565b60006105256109dd565b609a80546001600160a01b0319166001600160a01b0384169081179091556040517f1edf3afd4ac789736e00d216cd88be164ddcef26a6eedcc30cdb0cb62f3741b190600090a2506001919050565b61057c6109dd565b60405162461bcd60e51b815260206004820181905260248201527f72656e6f756e63696e67206f776e65727368697020697320626c6f636b65642e6044820152606401610334565b60995460405163877b9a6760e01b81526001600160a01b038381166004830152600092169063877b9a67906024016102b1565b609a546000906001600160a01b031633146106245760405162461bcd60e51b815260040161033490610b91565b609854604051632770a7eb60e21b81526001600160a01b0385811660048301526024820185905290911690639dc29fac906044016103bd565b6106656109dd565b6001600160a01b03811661068b5760405162461bcd60e51b815260040161033490610bde565b606580546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff16158080156106cd5750600054600160ff909116105b806106e75750303b1580156106e7575060005460ff166001145b61074a5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610334565b6000805460ff19166001179055801561076d576000805461ff0019166101001790555b609880546001600160a01b0319166001600160a01b038416179055610790610a39565b80156107d6576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5050565b6099546040805163d7bd6a8160e01b815290516000926001600160a01b03169163d7bd6a81916004808301926020929190829003018186803b15801561081f57600080fd5b505afa158015610833573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108579190610b0e565b905090565b6001600160a01b0381166108825760405162461bcd60e51b815260040161033490610bde565b6065546001600160a01b038281169116146108fa5760405162461bcd60e51b815260206004820152603260248201527f50726f706f7361626c654f776e61626c653a206e6577206f776e6572206973206044820152713737ba10383937b837b9b2b21037bbb732b960711b6064820152608401610334565b6001600160a01b03811633146109785760405162461bcd60e51b815260206004820152603a60248201527f50726f706f7361626c654f776e61626c653a20746869732063616c6c206d757360448201527f74206265206d61646520627920746865206e6577206f776e65720000000000006064820152608401610334565b61098181610a68565b50565b600061098e6109dd565b609980546001600160a01b0319166001600160a01b0384169081179091556040517fc1ab8227dcc82b3165b89762b5698f88dd96b65581d137b10770a84b27df6a9090600090a2506001919050565b6033546001600160a01b03163314610a375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610334565b565b600054610100900460ff16610a605760405162461bcd60e51b815260040161033490610c2e565b610a37610aba565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600054610100900460ff16610ae15760405162461bcd60e51b815260040161033490610c2e565b610a3733610a68565b600060208284031215610afc57600080fd5b8135610b0781610c79565b9392505050565b600060208284031215610b2057600080fd5b8151610b0781610c79565b60008060408385031215610b3e57600080fd5b8235610b4981610c79565b946020939093013593505050565b600060208284031215610b6957600080fd5b8135610b0781610c8e565b600060208284031215610b8657600080fd5b8151610b0781610c8e565b6020808252602d908201527f73656e646572206e6f7420617574686f72697a656420666f72206d696e74696e60408201526c339037b910313ab93734b7339760991b606082015260800190565b60208082526030908201527f50726f706f7361626c654f776e61626c653a206e6577206f776e65722069732060408201526f746865207a65726f206164647265737360801b606082015260800190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b038116811461098157600080fd5b801515811461098157600080fdfea26469706673582212205e04093c38c6f7e9b3fc36bf37b5e0bff4e5f491feac033953f637dfd13eeccc64736f6c63430008070033",
    "sourceMap": "504:3172:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3174:122;;;;;;:::i;:::-;;:::i;:::-;;;1990:14:45;;1983:22;1965:41;;1953:2;1938:18;3174:122:0;;;;;;;;3304:101;3391:5;;-1:-1:-1;;;;;3391:5:0;3304:101;;;-1:-1:-1;;;;;1502:32:45;;;1484:51;;1472:2;1457:18;3304:101:0;1338:203:45;2094:208:0;;;;;;:::i;:::-;;:::i;1612:255::-;;;;;;:::i;:::-;;:::i;1414:184::-;;;;;;:::i;:::-;;:::i;3552:121::-;;;:::i;:::-;;2868:118;;;;;;:::i;:::-;;:::i;1441:85:29:-;1513:6;;-1:-1:-1;;;;;1513:6:29;1441:85;;2524:152:0;;;;;;:::i;:::-;;:::i;863:220:7:-;;;;;;:::i;:::-;;:::i;622:31:0:-;;;;;-1:-1:-1;;;;;622:31:0;;;662;;;;;-1:-1:-1;;;;;662:31:0;;;863:129;;;;;;:::i;:::-;;:::i;405:28:7:-;;;;;-1:-1:-1;;;;;405:28:7;;;3413:125:0;;;:::i;442:413:7:-;;;;;;:::i;:::-;;:::i;1114:184:0:-;;;;;;:::i;:::-;;:::i;590:23::-;;;;;-1:-1:-1;;;;;590:23:0;;;3174:122;3264:7;;:24;;-1:-1:-1;;;3264:24:0;;-1:-1:-1;;;;;1502:32:45;;;3264:24:0;;;1484:51:45;3240:4:0;;3264:7;;:18;;1457::45;;3264:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3257:31;3174:122;-1:-1:-1;;3174:122:0:o;2094:208::-;771:7;;2175:4;;-1:-1:-1;;;;;771:7:0;749:10;:30;741:88;;;;-1:-1:-1;;;741:88:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2200:16:0;::::1;2192:47;;;::::0;-1:-1:-1;;;2192:47:0;;3944:2:45;2192:47:0::1;::::0;::::1;3926:21:45::0;3983:2;3963:18;;;3956:30;-1:-1:-1;;;4002:18:45;;;3995:48;4060:18;;2192:47:0::1;3742:342:45::0;2192:47:0::1;2250:5;::::0;:22:::1;::::0;-1:-1:-1;;;2250:22:0;;-1:-1:-1;;;;;1738:32:45;;;2250:22:0::1;::::0;::::1;1720:51:45::0;1787:18;;;1780:34;;;2250:5:0;;::::1;::::0;:10:::1;::::0;1693:18:45;;2250:22:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;2290:4:0::1;::::0;2094:208;-1:-1:-1;;;;;;2094:208:0:o;1612:255::-;1683:4;1334:13:29;:11;:13::i;:::-;1704:5:0::1;1700:103;;;1726:7;;;;;;;;;-1:-1:-1::0;;;;;1726:7:0::1;-1:-1:-1::0;;;;;1726:13:0::1;;:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1700:103;;;1774:7;;;;;;;;;-1:-1:-1::0;;;;;1774:7:0::1;-1:-1:-1::0;;;;;1774:15:0::1;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1700:103;1818:19;::::0;1990:14:45;;1983:22;1965:41;;1818:19:0::1;::::0;1953:2:45;1938:18;1818:19:0::1;;;;;;;-1:-1:-1::0;1855:4:0::1;1612:255:::0;;;:::o;1414:184::-;1480:4;1334:13:29;:11;:13::i;:::-;1497:7:0::1;:36:::0;;-1:-1:-1;;;;;;1497:36:0::1;-1:-1:-1::0;;;;;1497:36:0;::::1;::::0;;::::1;::::0;;;1549:19:::1;::::0;::::1;::::0;-1:-1:-1;;1549:19:0::1;-1:-1:-1::0;1586:4:0::1;1414:184:::0;;;:::o;3552:121::-;1334:13:29;:11;:13::i;:::-;3623:42:0::1;::::0;-1:-1:-1;;;3623:42:0;;4291:2:45;3623:42:0::1;::::0;::::1;4273:21:45::0;;;4310:18;;;4303:30;4369:34;4349:18;;;4342:62;4421:18;;3623:42:0::1;4089:356:45::0;2868:118:0;2956:7;;:22;;-1:-1:-1;;;2956:22:0;;-1:-1:-1;;;;;1502:32:45;;;2956:22:0;;;1484:51:45;2932:4:0;;2956:7;;:16;;1457:18:45;;2956:22:0;1338:203:45;2524:152:0;771:7;;2606:4;;-1:-1:-1;;;;;771:7:0;749:10;:30;741:88;;;;-1:-1:-1;;;741:88:0;;;;;;;:::i;:::-;2623:5:::1;::::0;:23:::1;::::0;-1:-1:-1;;;2623:23:0;;-1:-1:-1;;;;;1738:32:45;;;2623:23:0::1;::::0;::::1;1720:51:45::0;1787:18;;;1780:34;;;2623:5:0;;::::1;::::0;:10:::1;::::0;1693:18:45;;2623:23:0::1;1546:274:45::0;863:220:7;1334:13:29;:11;:13::i;:::-;-1:-1:-1;;;;;953:28:7;::::1;945:89;;;;-1:-1:-1::0;;;945:89:7::1;;;;;;;:::i;:::-;1045:13;:30:::0;;-1:-1:-1;;;;;;1045:30:7::1;-1:-1:-1::0;;;;;1045:30:7;;;::::1;::::0;;;::::1;::::0;;863:220::o;:129:0:-;3279:19:30;3302:13;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:30;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:30;1713:19:35;:23;;;3387:66:30;;-1:-1:-1;3436:12:30;;;;;:17;3387:66;3325:201;;;;-1:-1:-1;;;3325:201:30;;5079:2:45;3325:201:30;;;5061:21:45;5118:2;5098:18;;;5091:30;5157:34;5137:18;;;5130:62;-1:-1:-1;;;5208:18:45;;;5201:44;5262:19;;3325:201:30;4877:410:45;3325:201:30;3536:12;:16;;-1:-1:-1;;3536:16:30;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;-1:-1:-1;;3596:20:30;;;;;3562:65;931:5:0::1;:26:::0;;-1:-1:-1;;;;;;931:26:0::1;-1:-1:-1::0;;;;;931:26:0;::::1;;::::0;;968:16:::1;:14;:16::i;:::-;3651:14:30::0;3647:99;;;3697:5;3681:21;;-1:-1:-1;;3681:21:30;;;3721:14;;-1:-1:-1;2862:36:45;;3721:14:30;;2850:2:45;2835:18;3721:14:30;;;;;;;3647:99;3269:483;863:129:0;:::o;3413:125::-;3502:7;;:28;;;-1:-1:-1;;;3502:28:0;;;;3475:7;;-1:-1:-1;;;;;3502:7:0;;:26;;:28;;;;;;;;;;;;;;:7;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3495:35;;3413:125;:::o;442:413:7:-;-1:-1:-1;;;;;530:22:7;;522:83;;;;-1:-1:-1;;;522:83:7;;;;;;;:::i;:::-;636:13;;-1:-1:-1;;;;;624:25:7;;;636:13;;624:25;616:88;;;;-1:-1:-1;;;616:88:7;;3111:2:45;616:88:7;;;3093:21:45;3150:2;3130:18;;;3123:30;3189:34;3169:18;;;3162:62;-1:-1:-1;;;3240:18:45;;;3233:48;3298:19;;616:88:7;2909:414:45;616:88:7;-1:-1:-1;;;;;723:22:7;;735:10;723:22;715:93;;;;-1:-1:-1;;;715:93:7;;4652:2:45;715:93:7;;;4634:21:45;4691:2;4671:18;;;4664:30;4730:34;4710:18;;;4703:62;4801:28;4781:18;;;4774:56;4847:19;;715:93:7;4450:422:45;715:93:7;819:28;838:8;819:18;:28::i;:::-;442:413;:::o;1114:184:0:-;1180:4;1334:13:29;:11;:13::i;:::-;1197:7:0::1;:36:::0;;-1:-1:-1;;;;;;1197:36:0::1;-1:-1:-1::0;;;;;1197:36:0;::::1;::::0;;::::1;::::0;;;1249:19:::1;::::0;::::1;::::0;-1:-1:-1;;1249:19:0::1;-1:-1:-1::0;1286:4:0::1;1114:184:::0;;;:::o;1599:130:29:-;1513:6;;-1:-1:-1;;;;;1513:6:29;929:10:36;1662:23:29;1654:68;;;;-1:-1:-1;;;1654:68:29;;5494:2:45;1654:68:29;;;5476:21:45;;;5513:18;;;5506:30;5572:34;5552:18;;;5545:62;5624:18;;1654:68:29;5292:356:45;1654:68:29;1599:130::o;1003:95::-;5374:13:30;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:30;;;;;;;:::i;:::-;1065:26:29::1;:24;:26::i;2666:187::-:0;2758:6;;;-1:-1:-1;;;;;2774:17:29;;;-1:-1:-1;;;;;;2774:17:29;;;;;;;2806:40;;2758:6;;;2774:17;2758:6;;2806:40;;2739:16;;2806:40;2729:124;2666:187;:::o;1104:111::-;5374:13:30;;;;;;;5366:69;;;;-1:-1:-1;;;5366:69:30;;;;;;;:::i;:::-;1176:32:29::1;929:10:36::0;1176:18:29::1;:32::i;14:247:45:-:0;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;181:9;168:23;200:31;225:5;200:31;:::i;:::-;250:5;14:247;-1:-1:-1;;;14:247:45:o;266:251::-;336:6;389:2;377:9;368:7;364:23;360:32;357:52;;;405:1;402;395:12;357:52;437:9;431:16;456:31;481:5;456:31;:::i;522:315::-;590:6;598;651:2;639:9;630:7;626:23;622:32;619:52;;;667:1;664;657:12;619:52;706:9;693:23;725:31;750:5;725:31;:::i;:::-;775:5;827:2;812:18;;;;799:32;;-1:-1:-1;;;522:315:45:o;842:241::-;898:6;951:2;939:9;930:7;926:23;922:32;919:52;;;967:1;964;957:12;919:52;1006:9;993:23;1025:28;1047:5;1025:28;:::i;1088:245::-;1155:6;1208:2;1196:9;1187:7;1183:23;1179:32;1176:52;;;1224:1;1221;1214:12;1176:52;1256:9;1250:16;1275:28;1297:5;1275:28;:::i;3328:409::-;3530:2;3512:21;;;3569:2;3549:18;;;3542:30;3608:34;3603:2;3588:18;;3581:62;-1:-1:-1;;;3674:2:45;3659:18;;3652:43;3727:3;3712:19;;3328:409::o;5653:412::-;5855:2;5837:21;;;5894:2;5874:18;;;5867:30;5933:34;5928:2;5913:18;;5906:62;-1:-1:-1;;;5999:2:45;5984:18;;5977:46;6055:3;6040:19;;5653:412::o;6070:407::-;6272:2;6254:21;;;6311:2;6291:18;;;6284:30;6350:34;6345:2;6330:18;;6323:62;-1:-1:-1;;;6416:2:45;6401:18;;6394:41;6467:3;6452:19;;6070:407::o;6482:131::-;-1:-1:-1;;;;;6557:31:45;;6547:42;;6537:70;;6603:1;6600;6593:12;6618:118;6704:5;6697:13;6690:21;6683:5;6680:32;6670:60;;6726:1;6723;6716:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "burn(address,uint256)": "9dc29fac",
    "factory()": "c45a0155",
    "factoryPause(bool)": "53c3e308",
    "getCustodianWallet()": "d7bd6a81",
    "getToken()": "21df0da7",
    "initialize(address)": "c4d66de8",
    "isIssuer(address)": "877b9a67",
    "isMerchant(address)": "1a2f7167",
    "members()": "bdd4d18d",
    "mint(address,uint256)": "40c10f19",
    "owner()": "8da5cb5b",
    "proposeOwner(address)": "b5ed298a",
    "proposedOwner()": "d153b60c",
    "renounceOwnership()": "715018a6",
    "setFactory(address)": "5bb47808",
    "setMembers(address)": "f3796bdc",
    "token()": "fc0c546a",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"FactoryPause\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract FactoryInterface\",\"name\":\"factory\",\"type\":\"address\"}],\"name\":\"FactorySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract MembersInterface\",\"name\":\"members\",\"type\":\"address\"}],\"name\":\"MembersSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract FactoryInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"pause\",\"type\":\"bool\"}],\"name\":\"factoryPause\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCustodianWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isIssuer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isMerchant\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"members\",\"outputs\":[{\"internalType\":\"contract MembersInterface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_proposedOwner\",\"type\":\"address\"}],\"name\":\"proposeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proposedOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"name\":\"setFactory\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_members\",\"type\":\"address\"}],\"name\":\"setMembers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IndexToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"NEX Labs Protocol\",\"details\":\"This contract uses the upgradeable pattern\",\"kind\":\"dev\",\"methods\":{\"burn(address,uint256)\":{\"params\":{\"from\":\"address\",\"value\":\"uint256\"},\"returns\":{\"_0\":\"type bool\"}},\"isIssuer(address)\":{\"details\":\"Uses index mapping to check if data is valid\",\"params\":{\"addr\":\"address\"},\"returns\":{\"_0\":\"bool\"}},\"isMerchant(address)\":{\"details\":\"Uses index mapping to check if data is valid\",\"params\":{\"addr\":\"address\"},\"returns\":{\"_0\":\"bool\"}},\"mint(address,uint256)\":{\"params\":{\"amount\":\"uint256\",\"to\":\"address\"},\"returns\":{\"_0\":\"type bool\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setFactory(address)\":{\"params\":{\"_factory\":\"address\"},\"returns\":{\"_0\":\"type bool\"}},\"setMembers(address)\":{\"params\":{\"_members\":\"address\"},\"returns\":{\"_0\":\"type bool\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Index Controller\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Calls the burn function on the actual tokenonly callable via Factory (approved burn request)\"},\"isIssuer(address)\":{\"notice\":\"Returns whether or not a given address is a issuer\"},\"isMerchant(address)\":{\"notice\":\"Returns whether or not a given address is a merchant\"},\"mint(address,uint256)\":{\"notice\":\"Calls the mint function on the actual tokenonly callable via Factory (approved mint request)\"},\"setFactory(address)\":{\"notice\":\"Sets the Factory contract impl\"},\"setMembers(address)\":{\"notice\":\"Sets the members contract impl\"}},\"notice\":\"Controller contract that calls the actual token mint and burnas well as controls roles\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/controller/Controller.sol\":\"Controller\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"contracts/controller/Controller.sol\":{\"keccak256\":\"0x0c738ab7a4f677b54c56cfbc173e53d9ecff03ff5e9a56d38d8014898e554c9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84570c8b09041232f71227100514dcc937e020f412123464378b9b8238502c15\",\"dweb:/ipfs/QmW4QGTwXoBcEQkxQo6rCQpRMD2JeY4p6WTNNRFJbGFBDC\"]},\"contracts/controller/ControllerInterface.sol\":{\"keccak256\":\"0x3916eb8f1d65a587a84b65d76747fb5321916e27c58b83e492b323a98f2b466b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7928ca67518391038af7045d3b2f30e0b6bb42ef47bba01fd077f364b76adfc7\",\"dweb:/ipfs/QmbHKhHLCihN54UNenuqG1pbE3GznqA5gV2LUpC5BvTN6B\"]},\"contracts/factory/FactoryInterface.sol\":{\"keccak256\":\"0x5560121c34b033dbd2a302496b4fadbf166fe288c977831fc28128923fe2f640\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c68253fef507eff27dd9ed4c8a8bc890ef1be034013bad83aa723275b146c99a\",\"dweb:/ipfs/QmUHawNqoeZdPw9WKonhTT7wwWCTdgnmEvVQKGyj35cGMR\"]},\"contracts/factory/MembersInterface.sol\":{\"keccak256\":\"0xaad0711767a3ef1bb0716271f986d64b76f72ce20f9f66ab1b5d2e9cdf2a0376\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d8d2288627ebcd930c42ee73c6c6335fb2091135dc294fc0936e95afb08be2e5\",\"dweb:/ipfs/QmRdTx6VJDWxn5NnHoEmmqCuKhVs9xunbY8RGW9BsodZCd\"]},\"contracts/proposable/ProposableOwnableUpgradeable.sol\":{\"keccak256\":\"0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65\",\"dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72\"]},\"contracts/token/IndexToken.sol\":{\"keccak256\":\"0xd59e5349d3cec4316e0dc5f50f61d6a9f9a943fc9a5894f38a3f79f13e8ab986\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://017377a199dbb1d3dea0b06ed18d901c03aeaf08f535c877966413e81ee01204\",\"dweb:/ipfs/QmWkW5rAmNmbFBn5VX7be9y211jTPg8ZWiGxFyeizMWgbr\"]},\"contracts/token/TokenInterface.sol\":{\"keccak256\":\"0xd530600bcc7a81e3996517a2c6967dd448b2b9702eca4efe15f772de69c6d880\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f61d2aab02ee0f4c376b1b41629632d894c52127cd15669e9ffca3fb21f1307\",\"dweb:/ipfs/Qmb47gpnWD7i6Va4nKcmg7kPyaYcpXb74QFCQePomaJjZj\"]},\"node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8\",\"dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad\",\"dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee\",\"dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol\":{\"keccak256\":\"0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d\",\"dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.7+commit.e28d00a7"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "pause",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FactoryPause",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract FactoryInterface",
              "name": "factory",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FactorySet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract MembersInterface",
              "name": "members",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "MembersSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "factory",
          "outputs": [
            {
              "internalType": "contract FactoryInterface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bool",
              "name": "pause",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "factoryPause",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCustodianWallet",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isIssuer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isMerchant",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "members",
          "outputs": [
            {
              "internalType": "contract MembersInterface",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_proposedOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proposeOwner"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proposedOwner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_factory",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setFactory",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_members",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMembers",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "token",
          "outputs": [
            {
              "internalType": "contract IndexToken",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "burn(address,uint256)": {
            "params": {
              "from": "address",
              "value": "uint256"
            },
            "returns": {
              "_0": "type bool"
            }
          },
          "isIssuer(address)": {
            "details": "Uses index mapping to check if data is valid",
            "params": {
              "addr": "address"
            },
            "returns": {
              "_0": "bool"
            }
          },
          "isMerchant(address)": {
            "details": "Uses index mapping to check if data is valid",
            "params": {
              "addr": "address"
            },
            "returns": {
              "_0": "bool"
            }
          },
          "mint(address,uint256)": {
            "params": {
              "amount": "uint256",
              "to": "address"
            },
            "returns": {
              "_0": "type bool"
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "setFactory(address)": {
            "params": {
              "_factory": "address"
            },
            "returns": {
              "_0": "type bool"
            }
          },
          "setMembers(address)": {
            "params": {
              "_members": "address"
            },
            "returns": {
              "_0": "type bool"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(address,uint256)": {
            "notice": "Calls the burn function on the actual tokenonly callable via Factory (approved burn request)"
          },
          "isIssuer(address)": {
            "notice": "Returns whether or not a given address is a issuer"
          },
          "isMerchant(address)": {
            "notice": "Returns whether or not a given address is a merchant"
          },
          "mint(address,uint256)": {
            "notice": "Calls the mint function on the actual tokenonly callable via Factory (approved mint request)"
          },
          "setFactory(address)": {
            "notice": "Sets the Factory contract impl"
          },
          "setMembers(address)": {
            "notice": "Sets the members contract impl"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat/=node_modules/hardhat/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/controller/Controller.sol": "Controller"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/controller/Controller.sol": {
        "keccak256": "0x0c738ab7a4f677b54c56cfbc173e53d9ecff03ff5e9a56d38d8014898e554c9a",
        "urls": [
          "bzz-raw://84570c8b09041232f71227100514dcc937e020f412123464378b9b8238502c15",
          "dweb:/ipfs/QmW4QGTwXoBcEQkxQo6rCQpRMD2JeY4p6WTNNRFJbGFBDC"
        ],
        "license": "MIT"
      },
      "contracts/controller/ControllerInterface.sol": {
        "keccak256": "0x3916eb8f1d65a587a84b65d76747fb5321916e27c58b83e492b323a98f2b466b",
        "urls": [
          "bzz-raw://7928ca67518391038af7045d3b2f30e0b6bb42ef47bba01fd077f364b76adfc7",
          "dweb:/ipfs/QmbHKhHLCihN54UNenuqG1pbE3GznqA5gV2LUpC5BvTN6B"
        ],
        "license": "MIT"
      },
      "contracts/factory/FactoryInterface.sol": {
        "keccak256": "0x5560121c34b033dbd2a302496b4fadbf166fe288c977831fc28128923fe2f640",
        "urls": [
          "bzz-raw://c68253fef507eff27dd9ed4c8a8bc890ef1be034013bad83aa723275b146c99a",
          "dweb:/ipfs/QmUHawNqoeZdPw9WKonhTT7wwWCTdgnmEvVQKGyj35cGMR"
        ],
        "license": "MIT"
      },
      "contracts/factory/MembersInterface.sol": {
        "keccak256": "0xaad0711767a3ef1bb0716271f986d64b76f72ce20f9f66ab1b5d2e9cdf2a0376",
        "urls": [
          "bzz-raw://d8d2288627ebcd930c42ee73c6c6335fb2091135dc294fc0936e95afb08be2e5",
          "dweb:/ipfs/QmRdTx6VJDWxn5NnHoEmmqCuKhVs9xunbY8RGW9BsodZCd"
        ],
        "license": "MIT"
      },
      "contracts/proposable/ProposableOwnableUpgradeable.sol": {
        "keccak256": "0x421ed42defbccb80729079a48b5797927922db9b92f276902ff3d8afc8d47d70",
        "urls": [
          "bzz-raw://e903bfc8154574d4849b7c77ea46a8b2f544758f201f3a72dfdebcd0171dfe65",
          "dweb:/ipfs/QmQFJfinpAbZfdSfsZUPCAMPhaLy7mGQEUjnNNeE5sjs72"
        ],
        "license": "MIT"
      },
      "contracts/token/IndexToken.sol": {
        "keccak256": "0xd59e5349d3cec4316e0dc5f50f61d6a9f9a943fc9a5894f38a3f79f13e8ab986",
        "urls": [
          "bzz-raw://017377a199dbb1d3dea0b06ed18d901c03aeaf08f535c877966413e81ee01204",
          "dweb:/ipfs/QmWkW5rAmNmbFBn5VX7be9y211jTPg8ZWiGxFyeizMWgbr"
        ],
        "license": "MIT"
      },
      "contracts/token/TokenInterface.sol": {
        "keccak256": "0xd530600bcc7a81e3996517a2c6967dd448b2b9702eca4efe15f772de69c6d880",
        "urls": [
          "bzz-raw://6f61d2aab02ee0f4c376b1b41629632d894c52127cd15669e9ffca3fb21f1307",
          "dweb:/ipfs/Qmb47gpnWD7i6Va4nKcmg7kPyaYcpXb74QFCQePomaJjZj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol": {
        "keccak256": "0x4075622496acc77fd6d4de4cc30a8577a744d5c75afad33fdeacf1704d6eda98",
        "urls": [
          "bzz-raw://99c8cb3cd19a44bbfb6612605affb7d8b06cee1f6aa9362a37a8672b4f7eeaf8",
          "dweb:/ipfs/QmasyxFDBUp7k5KFgfDWEzM8PYSKEq7GVznzMJ1VxVRF4B"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
        "keccak256": "0x40c636b4572ff5f1dc50cf22097e93c0723ee14eff87e99ac2b02636eeca1250",
        "urls": [
          "bzz-raw://9c7d1f5e15633ab912b74c2f57e24559e66b03232300d4b27ff0f25bc452ecad",
          "dweb:/ipfs/QmYTJkc1cntYkKQ1Tu11nBcJLakiy93Tjytc4XHELo4GmR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol": {
        "keccak256": "0xd14a627157b9a411d2410713e5dd3a377e9064bd5c194a90748bbf27ea625784",
        "urls": [
          "bzz-raw://29d6a502187e88fdb4ac51319b6cfc82e7ba886a435480e229e5f838d2da55ee",
          "dweb:/ipfs/QmQNWKr3axXvQowZi31ydXRdeZ7UnE7oN8XAz9FCkx1JhN"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f",
        "urls": [
          "bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f",
          "dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/token/ERC20/extensions/IERC20MetadataUpgradeable.sol": {
        "keccak256": "0x605434219ebbe4653f703640f06969faa5a1d78f0bfef878e5ddbb1ca369ceeb",
        "urls": [
          "bzz-raw://4c9c634f99dd02d73ce7498b03a6305e251c05eeebb71457306561c1fab0fa7d",
          "dweb:/ipfs/QmbYRBbZHy8YoaQKXdPryiL3CSS7uUaRfRYi1TUj9cTqJQ"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/controller/Controller.sol",
    "id": 251,
    "exportedSymbols": {
      "AddressUpgradeable": [
        48677
      ],
      "ContextUpgradeable": [
        48719
      ],
      "Controller": [
        250
      ],
      "ControllerInterface": [
        318
      ],
      "ERC20Upgradeable": [
        48244
      ],
      "FactoryInterface": [
        1700
      ],
      "IERC20MetadataUpgradeable": [
        48347
      ],
      "IERC20Upgradeable": [
        48322
      ],
      "IndexToken": [
        3733
      ],
      "Initializable": [
        47505
      ],
      "MembersInterface": [
        3082
      ],
      "OwnableUpgradeable": [
        47336
      ],
      "PausableUpgradeable": [
        47632
      ],
      "ProposableOwnableUpgradeable": [
        3154
      ],
      "TokenInterface": [
        3859
      ]
    },
    "nodeType": "SourceUnit",
    "src": "33:3643:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "33:22:0",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".7"
        ]
      },
      {
        "id": 2,
        "nodeType": "ImportDirective",
        "src": "59:56:0",
        "nodes": [],
        "absolutePath": "contracts/proposable/ProposableOwnableUpgradeable.sol",
        "file": "../proposable/ProposableOwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 251,
        "sourceUnit": 3155,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "117:35:0",
        "nodes": [],
        "absolutePath": "contracts/controller/ControllerInterface.sol",
        "file": "./ControllerInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 251,
        "sourceUnit": 319,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 4,
        "nodeType": "ImportDirective",
        "src": "154:41:0",
        "nodes": [],
        "absolutePath": "contracts/factory/MembersInterface.sol",
        "file": "../factory/MembersInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 251,
        "sourceUnit": 3083,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "197:33:0",
        "nodes": [],
        "absolutePath": "contracts/token/IndexToken.sol",
        "file": "../token/IndexToken.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 251,
        "sourceUnit": 3734,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 6,
        "nodeType": "ImportDirective",
        "src": "232:41:0",
        "nodes": [],
        "absolutePath": "contracts/factory/FactoryInterface.sol",
        "file": "../factory/FactoryInterface.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 251,
        "sourceUnit": 1701,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 250,
        "nodeType": "ContractDefinition",
        "src": "504:3172:0",
        "nodes": [
          {
            "id": 14,
            "nodeType": "VariableDeclaration",
            "src": "590:23:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "fc0c546a",
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "608:5:0",
            "scope": 250,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IndexToken_$3733",
              "typeString": "contract IndexToken"
            },
            "typeName": {
              "id": 13,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 12,
                "name": "IndexToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3733,
                "src": "590:10:0"
              },
              "referencedDeclaration": 3733,
              "src": "590:10:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IndexToken_$3733",
                "typeString": "contract IndexToken"
              }
            },
            "visibility": "public"
          },
          {
            "id": 17,
            "nodeType": "VariableDeclaration",
            "src": "622:31:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "bdd4d18d",
            "mutability": "mutable",
            "name": "members",
            "nameLocation": "646:7:0",
            "scope": 250,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MembersInterface_$3082",
              "typeString": "contract MembersInterface"
            },
            "typeName": {
              "id": 16,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 15,
                "name": "MembersInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3082,
                "src": "622:16:0"
              },
              "referencedDeclaration": 3082,
              "src": "622:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MembersInterface_$3082",
                "typeString": "contract MembersInterface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 20,
            "nodeType": "VariableDeclaration",
            "src": "662:31:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "c45a0155",
            "mutability": "mutable",
            "name": "factory",
            "nameLocation": "686:7:0",
            "scope": 250,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FactoryInterface_$1700",
              "typeString": "contract FactoryInterface"
            },
            "typeName": {
              "id": 19,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 18,
                "name": "FactoryInterface",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1700,
                "src": "662:16:0"
              },
              "referencedDeclaration": 1700,
              "src": "662:16:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FactoryInterface_$1700",
                "typeString": "contract FactoryInterface"
              }
            },
            "visibility": "public"
          },
          {
            "id": 35,
            "nodeType": "ModifierDefinition",
            "src": "707:142:0",
            "nodes": [],
            "body": {
              "id": 34,
              "nodeType": "Block",
              "src": "730:119:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 29,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "749:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 24,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "749:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 27,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "771:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FactoryInterface_$1700",
                                "typeString": "contract FactoryInterface"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FactoryInterface_$1700",
                                "typeString": "contract FactoryInterface"
                              }
                            ],
                            "id": 26,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "763:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 25,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "763:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 28,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "763:16:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "749:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73656e646572206e6f7420617574686f72697a656420666f72206d696e74696e67206f72206275726e696e672e",
                        "id": 30,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "781:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b7e925bc5bed91116456c78b4e3aed703b131660764f241abcad399f70261bc",
                          "typeString": "literal_string \"sender not authorized for minting or burning.\""
                        },
                        "value": "sender not authorized for minting or burning."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b7e925bc5bed91116456c78b4e3aed703b131660764f241abcad399f70261bc",
                          "typeString": "literal_string \"sender not authorized for minting or burning.\""
                        }
                      ],
                      "id": 22,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "741:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 31,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "741:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 32,
                  "nodeType": "ExpressionStatement",
                  "src": "741:88:0"
                },
                {
                  "id": 33,
                  "nodeType": "PlaceholderStatement",
                  "src": "840:1:0"
                }
              ]
            },
            "name": "onlyFactory",
            "nameLocation": "716:11:0",
            "parameters": {
              "id": 21,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:2:0"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 52,
            "nodeType": "FunctionDefinition",
            "src": "863:129:0",
            "nodes": [],
            "body": {
              "id": 51,
              "nodeType": "Block",
              "src": "920:72:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 46,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "931:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexToken_$3733",
                        "typeString": "contract IndexToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "950:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 43,
                        "name": "IndexToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3733,
                        "src": "939:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IndexToken_$3733_$",
                          "typeString": "type(contract IndexToken)"
                        }
                      },
                      "id": 45,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "939:18:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IndexToken_$3733",
                        "typeString": "contract IndexToken"
                      }
                    },
                    "src": "931:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IndexToken_$3733",
                      "typeString": "contract IndexToken"
                    }
                  },
                  "id": 47,
                  "nodeType": "ExpressionStatement",
                  "src": "931:26:0"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 48,
                      "name": "__Ownable_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47231,
                      "src": "968:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 49,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "968:16:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50,
                  "nodeType": "ExpressionStatement",
                  "src": "968:16:0"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47407,
                  "src": "908:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "908:11:0"
              }
            ],
            "name": "initialize",
            "nameLocation": "872:10:0",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "891:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 52,
                  "src": "883:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "883:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "882:16:0"
            },
            "returnParameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "920:0:0"
            },
            "scope": 250,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 75,
            "nodeType": "FunctionDefinition",
            "src": "1114:184:0",
            "nodes": [],
            "body": {
              "id": 74,
              "nodeType": "Block",
              "src": "1186:112:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 62,
                      "name": "members",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1197:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MembersInterface_$3082",
                        "typeString": "contract MembersInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 64,
                          "name": "_members",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1224:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 63,
                        "name": "MembersInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3082,
                        "src": "1207:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_MembersInterface_$3082_$",
                          "typeString": "type(contract MembersInterface)"
                        }
                      },
                      "id": 65,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1207:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MembersInterface_$3082",
                        "typeString": "contract MembersInterface"
                      }
                    },
                    "src": "1197:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MembersInterface_$3082",
                      "typeString": "contract MembersInterface"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1197:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 69,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "1260:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MembersInterface_$3082",
                          "typeString": "contract MembersInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_MembersInterface_$3082",
                          "typeString": "contract MembersInterface"
                        }
                      ],
                      "id": 68,
                      "name": "MembersSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 259,
                      "src": "1249:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_MembersInterface_$3082_$returns$__$",
                        "typeString": "function (contract MembersInterface)"
                      }
                    },
                    "id": 70,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1249:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 71,
                  "nodeType": "EmitStatement",
                  "src": "1244:24:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1286:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 61,
                  "id": 73,
                  "nodeType": "Return",
                  "src": "1279:11:0"
                }
              ]
            },
            "documentation": {
              "id": 53,
              "nodeType": "StructuredDocumentation",
              "src": "1006:102:0",
              "text": "@notice Sets the members contract impl\n @param _members address\n @return type bool"
            },
            "functionSelector": "f3796bdc",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 58,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 57,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47250,
                  "src": "1161:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1161:9:0"
              }
            ],
            "name": "setMembers",
            "nameLocation": "1123:10:0",
            "parameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "_members",
                  "nameLocation": "1142:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1134:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1134:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1133:18:0"
            },
            "returnParameters": {
              "id": 61,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 75,
                  "src": "1180:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 59,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1180:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1179:6:0"
            },
            "scope": 250,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 98,
            "nodeType": "FunctionDefinition",
            "src": "1414:184:0",
            "nodes": [],
            "body": {
              "id": 97,
              "nodeType": "Block",
              "src": "1486:112:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 85,
                      "name": "factory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "1497:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryInterface_$1700",
                        "typeString": "contract FactoryInterface"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 87,
                          "name": "_factory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 78,
                          "src": "1524:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 86,
                        "name": "FactoryInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1700,
                        "src": "1507:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FactoryInterface_$1700_$",
                          "typeString": "type(contract FactoryInterface)"
                        }
                      },
                      "id": 88,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1507:26:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FactoryInterface_$1700",
                        "typeString": "contract FactoryInterface"
                      }
                    },
                    "src": "1497:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FactoryInterface_$1700",
                      "typeString": "contract FactoryInterface"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1497:36:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 92,
                        "name": "factory",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "1560:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FactoryInterface_$1700",
                          "typeString": "contract FactoryInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_FactoryInterface_$1700",
                          "typeString": "contract FactoryInterface"
                        }
                      ],
                      "id": 91,
                      "name": "FactorySet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 264,
                      "src": "1549:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_contract$_FactoryInterface_$1700_$returns$__$",
                        "typeString": "function (contract FactoryInterface)"
                      }
                    },
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1549:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 94,
                  "nodeType": "EmitStatement",
                  "src": "1544:24:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1586:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 84,
                  "id": 96,
                  "nodeType": "Return",
                  "src": "1579:11:0"
                }
              ]
            },
            "documentation": {
              "id": 76,
              "nodeType": "StructuredDocumentation",
              "src": "1306:102:0",
              "text": "@notice Sets the Factory contract impl\n @param _factory address\n @return type bool"
            },
            "functionSelector": "5bb47808",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 81,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47250,
                  "src": "1461:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1461:9:0"
              }
            ],
            "name": "setFactory",
            "nameLocation": "1423:10:0",
            "parameters": {
              "id": 79,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78,
                  "mutability": "mutable",
                  "name": "_factory",
                  "nameLocation": "1442:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "1434:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 77,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1433:18:0"
            },
            "returnParameters": {
              "id": 84,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 83,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 98,
                  "src": "1480:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 82,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1480:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1479:6:0"
            },
            "scope": 250,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 129,
            "nodeType": "FunctionDefinition",
            "src": "1612:255:0",
            "nodes": [],
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1689:178:0",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "id": 108,
                    "name": "pause",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 100,
                    "src": "1704:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 120,
                    "nodeType": "Block",
                    "src": "1759:44:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 115,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "1774:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FactoryInterface_$1700",
                                "typeString": "contract FactoryInterface"
                              }
                            },
                            "id": 117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unpause",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1565,
                            "src": "1774:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1774:17:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 119,
                        "nodeType": "ExpressionStatement",
                        "src": "1774:17:0"
                      }
                    ]
                  },
                  "id": 121,
                  "nodeType": "IfStatement",
                  "src": "1700:103:0",
                  "trueBody": {
                    "id": 114,
                    "nodeType": "Block",
                    "src": "1711:42:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 109,
                              "name": "factory",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20,
                              "src": "1726:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FactoryInterface_$1700",
                                "typeString": "contract FactoryInterface"
                              }
                            },
                            "id": 111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pause",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1562,
                            "src": "1726:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1726:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 113,
                        "nodeType": "ExpressionStatement",
                        "src": "1726:15:0"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 123,
                        "name": "pause",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 100,
                        "src": "1831:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 122,
                      "name": "FactoryPause",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "1818:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1818:19:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 125,
                  "nodeType": "EmitStatement",
                  "src": "1813:24:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1855:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 107,
                  "id": 127,
                  "nodeType": "Return",
                  "src": "1848:11:0"
                }
              ]
            },
            "baseFunctions": [
              293
            ],
            "functionSelector": "53c3e308",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 104,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 103,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47250,
                  "src": "1664:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1664:9:0"
              }
            ],
            "name": "factoryPause",
            "nameLocation": "1621:12:0",
            "overrides": {
              "id": 102,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1655:8:0"
            },
            "parameters": {
              "id": 101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 100,
                  "mutability": "mutable",
                  "name": "pause",
                  "nameLocation": "1639:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1634:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 99,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1634:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1633:12:0"
            },
            "returnParameters": {
              "id": 107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 106,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1683:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 105,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1683:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1682:6:0"
            },
            "scope": 250,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 162,
            "nodeType": "FunctionDefinition",
            "src": "2094:208:0",
            "nodes": [],
            "body": {
              "id": 161,
              "nodeType": "Block",
              "src": "2181:121:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 143,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 132,
                          "src": "2200:2:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2214:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2206:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 144,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2206:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 147,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2206:10:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2200:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c696420746f2061646472657373",
                        "id": 149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2218:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a59a036ab859b3be2c732ef2258aa22bd490b4b58df381cced36b1d90315b4f",
                          "typeString": "literal_string \"invalid to address\""
                        },
                        "value": "invalid to address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a59a036ab859b3be2c732ef2258aa22bd490b4b58df381cced36b1d90315b4f",
                          "typeString": "literal_string \"invalid to address\""
                        }
                      ],
                      "id": 142,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2192:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 150,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2192:47:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151,
                  "nodeType": "ExpressionStatement",
                  "src": "2192:47:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 155,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "2261:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 156,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 134,
                        "src": "2265:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 152,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2250:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$3733",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 154,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3322,
                      "src": "2250:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2250:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 158,
                  "nodeType": "ExpressionStatement",
                  "src": "2250:22:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 159,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2290:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 141,
                  "id": 160,
                  "nodeType": "Return",
                  "src": "2283:11:0"
                }
              ]
            },
            "baseFunctions": [
              277
            ],
            "documentation": {
              "id": 130,
              "nodeType": "StructuredDocumentation",
              "src": "1881:207:0",
              "text": "@notice Calls the mint function on the actual token\n @notice only callable via Factory (approved mint request)\n @param to address\n @param amount uint256\n @return type bool"
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 138,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 137,
                  "name": "onlyFactory",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35,
                  "src": "2154:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2154:11:0"
              }
            ],
            "name": "mint",
            "nameLocation": "2103:4:0",
            "overrides": {
              "id": 136,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2145:8:0"
            },
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2116:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2108:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2108:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2128:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2120:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2120:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2107:28:0"
            },
            "returnParameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 162,
                  "src": "2175:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2175:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2174:6:0"
            },
            "scope": 250,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 185,
            "nodeType": "FunctionDefinition",
            "src": "2524:152:0",
            "nodes": [],
            "body": {
              "id": 184,
              "nodeType": "Block",
              "src": "2612:64:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 178,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "2634:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 179,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 167,
                        "src": "2640:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 175,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "2623:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$3733",
                          "typeString": "contract IndexToken"
                        }
                      },
                      "id": 177,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3361,
                      "src": "2623:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2623:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 181,
                  "nodeType": "ExpressionStatement",
                  "src": "2623:23:0"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2664:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 174,
                  "id": 183,
                  "nodeType": "Return",
                  "src": "2657:11:0"
                }
              ]
            },
            "baseFunctions": [
              286
            ],
            "documentation": {
              "id": 163,
              "nodeType": "StructuredDocumentation",
              "src": "2310:208:0",
              "text": "@notice Calls the burn function on the actual token\n @notice only callable via Factory (approved burn request)\n @param from address\n @param value uint256\n @return type bool"
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 171,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 170,
                  "name": "onlyFactory",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 35,
                  "src": "2585:11:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2585:11:0"
              }
            ],
            "name": "burn",
            "nameLocation": "2533:4:0",
            "overrides": {
              "id": 169,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2576:8:0"
            },
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2546:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2538:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2538:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 167,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2560:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2552:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 166,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2552:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2537:29:0"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 185,
                  "src": "2606:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2606:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2605:6:0"
            },
            "scope": 250,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 200,
            "nodeType": "FunctionDefinition",
            "src": "2868:118:0",
            "nodes": [],
            "body": {
              "id": 199,
              "nodeType": "Block",
              "src": "2938:48:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 196,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 188,
                        "src": "2973:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 194,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "2956:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MembersInterface_$3082",
                          "typeString": "contract MembersInterface"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isIssuer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3058,
                      "src": "2956:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2956:22:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 193,
                  "id": 198,
                  "nodeType": "Return",
                  "src": "2949:29:0"
                }
              ]
            },
            "baseFunctions": [
              300
            ],
            "documentation": {
              "id": 186,
              "nodeType": "StructuredDocumentation",
              "src": "2690:172:0",
              "text": "@notice Returns whether or not a given address is a issuer\n @dev Uses index mapping to check if data is valid\n @param addr address\n @return bool"
            },
            "functionSelector": "877b9a67",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isIssuer",
            "nameLocation": "2877:8:0",
            "overrides": {
              "id": 190,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2914:8:0"
            },
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "2894:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "2886:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2886:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2885:14:0"
            },
            "returnParameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 200,
                  "src": "2932:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2932:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2931:6:0"
            },
            "scope": 250,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 215,
            "nodeType": "FunctionDefinition",
            "src": "3174:122:0",
            "nodes": [],
            "body": {
              "id": 214,
              "nodeType": "Block",
              "src": "3246:50:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 211,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 203,
                        "src": "3283:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 209,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "3264:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MembersInterface_$3082",
                          "typeString": "contract MembersInterface"
                        }
                      },
                      "id": 210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isMerchant",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3065,
                      "src": "3264:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view external returns (bool)"
                      }
                    },
                    "id": 212,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3264:24:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 208,
                  "id": 213,
                  "nodeType": "Return",
                  "src": "3257:31:0"
                }
              ]
            },
            "baseFunctions": [
              307
            ],
            "documentation": {
              "id": 201,
              "nodeType": "StructuredDocumentation",
              "src": "2994:174:0",
              "text": "@notice Returns whether or not a given address is a merchant\n @dev Uses index mapping to check if data is valid\n @param addr address\n @return bool"
            },
            "functionSelector": "1a2f7167",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isMerchant",
            "nameLocation": "3183:10:0",
            "overrides": {
              "id": 205,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3222:8:0"
            },
            "parameters": {
              "id": 204,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 203,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "3202:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "3194:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 202,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3194:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3193:14:0"
            },
            "returnParameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 215,
                  "src": "3240:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3240:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3239:6:0"
            },
            "scope": 250,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 227,
            "nodeType": "FunctionDefinition",
            "src": "3304:101:0",
            "nodes": [],
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "3365:40:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 223,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14,
                        "src": "3391:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IndexToken_$3733",
                          "typeString": "contract IndexToken"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IndexToken_$3733",
                          "typeString": "contract IndexToken"
                        }
                      ],
                      "id": 222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3383:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 221,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3383:7:0",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3383:14:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 220,
                  "id": 225,
                  "nodeType": "Return",
                  "src": "3376:21:0"
                }
              ]
            },
            "baseFunctions": [
              312
            ],
            "functionSelector": "21df0da7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getToken",
            "nameLocation": "3313:8:0",
            "overrides": {
              "id": 217,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3338:8:0"
            },
            "parameters": {
              "id": 216,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3321:2:0"
            },
            "returnParameters": {
              "id": 220,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "3356:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 218,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3356:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3355:9:0"
            },
            "scope": 250,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 238,
            "nodeType": "FunctionDefinition",
            "src": "3413:125:0",
            "nodes": [],
            "body": {
              "id": 237,
              "nodeType": "Block",
              "src": "3484:54:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 233,
                        "name": "members",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "3502:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MembersInterface_$3082",
                          "typeString": "contract MembersInterface"
                        }
                      },
                      "id": 234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getCustodianWallet",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3081,
                      "src": "3502:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                        "typeString": "function () view external returns (address)"
                      }
                    },
                    "id": 235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3502:28:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 232,
                  "id": 236,
                  "nodeType": "Return",
                  "src": "3495:35:0"
                }
              ]
            },
            "baseFunctions": [
              317
            ],
            "functionSelector": "d7bd6a81",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCustodianWallet",
            "nameLocation": "3422:18:0",
            "overrides": {
              "id": 229,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3457:8:0"
            },
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3440:2:0"
            },
            "returnParameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 231,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 238,
                  "src": "3475:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 230,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3475:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3474:9:0"
            },
            "scope": 250,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 249,
            "nodeType": "FunctionDefinition",
            "src": "3552:121:0",
            "nodes": [],
            "body": {
              "id": 248,
              "nodeType": "Block",
              "src": "3612:61:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "72656e6f756e63696e67206f776e65727368697020697320626c6f636b65642e",
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3630:34:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_718ce701fd4579041a46c36d1647a7d929403aaf51e33ce7190cfb9af246f74a",
                          "typeString": "literal_string \"renouncing ownership is blocked.\""
                        },
                        "value": "renouncing ownership is blocked."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_718ce701fd4579041a46c36d1647a7d929403aaf51e33ce7190cfb9af246f74a",
                          "typeString": "literal_string \"renouncing ownership is blocked.\""
                        }
                      ],
                      "id": 244,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "3623:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3623:42:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "3623:42:0"
                }
              ]
            },
            "baseFunctions": [
              47287
            ],
            "functionSelector": "715018a6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 242,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 241,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 47250,
                  "src": "3602:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3602:9:0"
              }
            ],
            "name": "renounceOwnership",
            "nameLocation": "3561:17:0",
            "overrides": {
              "id": 240,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3593:8:0"
            },
            "parameters": {
              "id": 239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3578:2:0"
            },
            "returnParameters": {
              "id": 243,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3612:0:0"
            },
            "scope": 250,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 8,
              "name": "ControllerInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 318,
              "src": "527:19:0"
            },
            "id": 9,
            "nodeType": "InheritanceSpecifier",
            "src": "527:19:0"
          },
          {
            "baseName": {
              "id": 10,
              "name": "ProposableOwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3154,
              "src": "548:28:0"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "548:28:0"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7,
          "nodeType": "StructuredDocumentation",
          "src": "277:227:0",
          "text": "@title Index Controller\n @author NEX Labs Protocol\n @notice Controller contract that calls the actual token mint and burn\n @notice as well as controls roles\n @dev This contract uses the upgradeable pattern"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          250,
          3154,
          47336,
          48719,
          47505,
          318
        ],
        "name": "Controller",
        "nameLocation": "513:10:0",
        "scope": 251,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 0
}